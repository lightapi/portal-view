{
  "updatePayment": {
    "formId": "updatePayment",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "user",
        "action": "updatePayment",
        "version": "0.1.0",
        "title": "Update Payment",
        "success": "/app/success",
        "failure": "/app/failure"
      },
      {
        "host": "lightapi.net",
        "service": "user",
        "action": "deletePayment",
        "version": "0.1.0",
        "title": "Delete Payment",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Payment Methods Setup",
      "properties": {
        "email": {
          "type": "string",
          "title": "Merchant Email"
        },
        "payments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "title": "Payment Method",
                "enum": [
                  "OnPickup",
                  "OnDelivery",
                  "Braintree",
                  "Taiji",
                  "TaijiToken",
                  "Bitcoin",
                  "Ethereum"
                ]
              },
              "sandbox": {
                "type": "boolean",
                "title": "Test Sandbox?"
              },
              "merchantId": {
                "type": "string",
                "title": "Merchant Id"
              },
              "privateKey": {
                "type": "string",
                "title": "Private Key"
              },
              "publicKey": {
                "type": "string",
                "title": "Public Key"
              },
              "address": {
                "type": "string",
                "title": "Crypto Address"
              },
              "tokenName": {
                "type": "string",
                "title": "Token Name"
              },
              "acceptMethods": {
                "type": "string",
                "title": "Accept Methods"
              }
            }
          }
        }
      },
      "required": ["email"]
    },
    "form": [
      "email",
      {
        "key": "payments",
        "type": "array",
        "items": [
          "payments[].method",
          "payments[].sandbox",
          {
            "key": "payments[].merchantId",
            "condition": "model.payments[form.key[1]].method === 'Braintree'"
          },
          {
            "key": "payments[].privateKey",
            "condition": "model.payments[form.key[1]].method === 'Braintree'"
          },
          {
            "key": "payments[].publicKey",
            "condition": "model.payments[form.key[1]].method === 'Braintree'"
          },
          {
            "key": "payments[].tokenName",
            "condition": "model.payments[form.key[1]].method === 'TaijiToken'"
          },
          {
            "key": "payments[].address",
            "condition": "model.payments[form.key[1]].method === 'Taiji' || model.payments[form.key[1]].method === 'TaijiToken' || model.payments[form.key[1]].method === 'Bitcoin' || model.payments[form.key[1]].method === 'Ethereum'"
          },
          {
            "key": "payments[].acceptMethods",
            "condition": "model.payments[form.key[1]].method === 'OnPickup' || model.payments[form.key[1]].method === 'OnDelivery'"
          }
        ]
      }
    ]
  },
  "createOrgForm": {
    "formId": "createOrgForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "host",
        "action": "createOrg",
        "version": "0.1.0",
        "title": "Create Org",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Org Request",
      "required": [
        "domain",
        "orgName",
        "orgDesc",
        "subDomain",
        "hostDesc",
        "hostOwner"
      ],
      "properties": {
        "domain": {
          "title": "Org Domain",
          "type": "string"
        },
        "orgName": {
          "title": "Org Name",
          "type": "string"
        },
        "orgDesc": {
          "title": "Org Desc",
          "type": "string"
        },
        "subDomain": {
          "title": "Default SubDomain or Host",
          "type": "string",
          "default": "test"
        },
        "hostDesc": {
          "title": "Host or SubDomain Desc",
          "type": "string"
        },
        "hostOwner": {
          "title": "Host Owner",
          "type": "string"
        }
      }
    },
    "form": [
      {
        "type": "help",
        "description": "The domain should be your email domain name. i.e., it should be example.com if your email is yourname@example.com",
        "align": "left"
      },
      "domain",
      "orgName",
      {
        "key": "orgDesc",
        "type": "textarea"
      },
      {
        "type": "help",
        "description": "Create a default subdomain or host based on the domain and an owner of the host with host-admin role. Default to test and it can be changed.",
        "align": "left"
      },
      "subDomain",
      {
        "key": "hostDesc",
        "type": "textarea"
      },
      {
        "key": "hostOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      }
    ]
  },
  "updateOrgForm": {
    "formId": "updateOrgForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "host",
        "action": "updateOrg",
        "version": "0.1.0",
        "title": "Update Org",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Org Request",
      "required": ["domain", "orgName", "orgDesc", "orgOwner"],
      "properties": {
        "domain": {
          "title": "Org Domain",
          "type": "string",
          "readonly": true
        },
        "orgName": {
          "title": "Org Name",
          "type": "string"
        },
        "orgDesc": {
          "title": "Org Desc",
          "type": "string"
        },
        "orgOwner": {
          "title": "Org Owner",
          "type": "string"
        }
      }
    },
    "form": [
      "domain",
      "orgName",
      {
        "key": "orgDesc",
        "type": "textarea"
      },
      {
        "type": "help",
        "description": "You can choose another user to be the org owner and org-admin role will be switched.",
        "align": "left"
      },
      {
        "key": "orgOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      }
    ]
  },
  "createHostForm": {
    "formId": "createHostForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "host",
        "action": "createHost",
        "version": "0.1.0",
        "title": "Create Host",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Create Host Request",
      "required": ["domain", "subDomain", "hostDesc", "hostOwner"],
      "properties": {
        "domain": {
          "title": "Domain",
          "type": "string"
        },
        "subDomain": {
          "title": "SubDomain",
          "type": "string"
        },
        "hostDesc": {
          "title": "Host description",
          "type": "string"
        },
        "hostOwner": {
          "title": "Host description",
          "type": "string"
        }
      }
    },
    "form": [
      {
        "type": "help",
        "description": "A host is a sub domain that can be an environment or region. For example: dev, sit, stg, prd or ca, us, eu etc.",
        "align": "left"
      },
      "domain",
      "subDomain",
      {
        "key": "hostDesc",
        "type": "textarea"
      },
      {
        "key": "hostOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      }
    ]
  },
  "updateHostForm": {
    "formId": "updateHostForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "host",
        "action": "updateHost",
        "version": "0.1.0",
        "title": "Update Host",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Host Request",
      "required": ["domain", "subDomain", "hostDesc", "hostOwner"],
      "properties": {
        "domain": {
          "title": "Domain",
          "type": "string",
          "readonly": true
        },
        "subDomain": {
          "title": "SubDomain",
          "type": "string",
          "readonly": true
        },
        "hostDesc": {
          "title": "Host description",
          "type": "string"
        },
        "hostOwner": {
          "title": "Host Owner",
          "type": "string"
        }
      }
    },
    "form": [
      "domain",
      "subDomain",
      {
        "key": "hostDesc",
        "type": "textarea"
      },
      {
        "key": "hostOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      }
    ]
  },
  "switchHostForm": {
    "formId": "switchHostForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "user",
        "action": "switchHost",
        "version": "0.1.0",
        "title": "Switch Host",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Switch Host",
      "required": ["hostId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string"
        }
      }
    },
    "form": [
      {
        "key": "hostId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22host%22%2C%22action%22%3A%22getHostLabel%22%2C%22version%22%3A%220.1.0%22%7D"
        }
      }
    ]
  },
  "paymentForm": {
    "formId": "paymentForm",
    "actions": [
      {
        "action": "delivery",
        "title": "Review Delivery"
      },
      {
        "action": "confirm",
        "title": "Confirm Order"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Delivery",
      "required": ["payment"],
      "properties": {
        "payment": {
          "title": "Payment Option",
          "type": "string",
          "enum": ["Pickup", "Online"]
        }
      }
    },
    "form": [
      {
        "key": "payment",
        "type": "select",
        "titleMap": [
          {
            "value": "Pickup",
            "name": "Pay at Pickup"
          },
          {
            "value": "Online",
            "name": "Pay Online"
          }
        ]
      }
    ]
  },
  "pickupForm": {
    "formId": "pickupForm",
    "actions": [
      {
        "action": "cart",
        "title": "Review Cart"
      },
      {
        "action": "payment",
        "title": "Payment"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Delivery",
      "required": ["pickupTime"],
      "properties": {
        "pickupTime": {
          "title": "Pick up Time",
          "type": "string",
          "enum": ["0", "5", "10", "20", "30", "60", "120", "240"]
        },
        "instruction": {
          "title": "Additional Instruction",
          "type": "string"
        }
      }
    },
    "form": [
      {
        "type": "help",
        "description": "22 Front Street, Toronto, ON",
        "align": "left"
      },
      {
        "key": "pickupTime",
        "type": "select",
        "titleMap": [
          {
            "value": "0",
            "name": "Now"
          },
          {
            "value": "5",
            "name": "5 minutes"
          },
          {
            "value": "10",
            "name": "10 minutes"
          },
          {
            "value": "20",
            "name": "20 minutes"
          },
          {
            "value": "30",
            "name": "30 minutes"
          },
          {
            "value": "60",
            "name": "1 hour"
          },
          {
            "value": "120",
            "name": "2 hours"
          },
          {
            "value": "240",
            "name": "4 hours"
          }
        ]
      },
      {
        "key": "instruction",
        "type": "textarea"
      }
    ]
  },
  "restaurantForm": {
    "formId": "restaurantForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "updateWebsite",
        "version": "0.1.0",
        "title": "Restaurant",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["co"],
      "properties": {
        "co": {
          "title": "Component",
          "type": "string",
          "default": "restaurant",
          "readonly": true
        },
        "home": {
          "type": "object",
          "title": "Home",
          "required": ["render"],
          "properties": {
            "render": {
              "type": "boolean",
              "title": "Render?"
            },
            "name": {
              "type": "string",
              "title": "Restaurant Name"
            },
            "nameSize": {
              "type": "string",
              "title": "Size of the name in px"
            },
            "title": {
              "type": "string",
              "title": "Title or Type"
            },
            "titleSize": {
              "type": "string",
              "title": "Size of the title in px"
            },
            "background": {
              "type": "string",
              "title": "Backgroud Picture Url"
            },
            "buttons": {
              "type": "array",
              "title": "Menu Buttons",
              "minItems": 1,
              "maxItems": 4,
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "title": "Label",
                    "type": "string"
                  },
                  "menu": {
                    "title": "Menu",
                    "type": "string"
                  }
                },
                "required": ["label", "menu"]
              }
            }
          }
        },
        "about": {
          "type": "object",
          "title": "About",
          "required": ["render"],
          "properties": {
            "render": {
              "type": "boolean",
              "title": "Render?"
            },
            "banner": {
              "type": "string",
              "title": "Banner Picture Url"
            },
            "stories": {
              "type": "array",
              "title": "stories",
              "minItems": 1,
              "maxItems": 10,
              "items": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "title": "Subject"
                  },
                  "content": {
                    "type": "string",
                    "title": "Content"
                  },
                  "image": {
                    "type": "string",
                    "title": "Image Url"
                  }
                }
              }
            }
          }
        },
        "catalog": {
          "type": "object",
          "title": "Online Order",
          "required": ["render"],
          "properties": {
            "render": {
              "type": "boolean",
              "title": "Render?"
            },
            "banner": {
              "type": "string",
              "title": "Banner Picture Url"
            },
            "taxRate": {
              "type": "number",
              "title": "Tax Rate Percentage. i.e 13"
            },
            "products": {
              "type": "array",
              "title": "Products",
              "minItems": 1,
              "maxItems": 1000,
              "items": {
                "type": "object",
                "title": "product",
                "properties": {
                  "sku": {
                    "type": "string",
                    "title": "SKU"
                  },
                  "name": {
                    "type": "string",
                    "title": "Name"
                  },
                  "price": {
                    "type": "number",
                    "title": "Price"
                  },
                  "maxOrderQty": {
                    "type": "number",
                    "title": "Max quantity per order"
                  },
                  "image": {
                    "type": "string",
                    "title": "Image Url"
                  }
                }
              }
            }
          }
        },
        "reservation": {
          "type": "object",
          "title": "Reservation",
          "required": ["render"],
          "properties": {
            "render": {
              "type": "boolean",
              "title": "Render?"
            },
            "background": {
              "type": "string",
              "title": "Backgroud Image Url"
            }
          }
        },
        "contact": {
          "type": "object",
          "title": "Contact",
          "required": ["render"],
          "properties": {
            "render": {
              "type": "boolean",
              "title": "Render?"
            },
            "lines": {
              "type": "array",
              "title": "Lines",
              "minItems": 1,
              "maxItems": 20,
              "itmes": {
                "type": "string",
                "title": "Line"
              }
            }
          }
        }
      }
    },
    "form": ["co", "home", "about", "catalog", "reservation", "contact"]
  },
  "websiteForm": {
    "formId": "websiteForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "updateWebsite",
        "version": "0.1.0",
        "title": "Website",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Website",
      "type": "object",
      "properties": {
        "co": {
          "title": "Component",
          "type": "string",
          "default": "generic",
          "readonly": true
        },
        "ss": {
          "type": "array",
          "title": "Subject",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "type": "object",
            "properties": {
              "t": {
                "title": "Timestamp",
                "type": "string"
              },
              "s": {
                "title": "Subject",
                "type": "string"
              },
              "d": {
                "title": "Description",
                "type": "string"
              },
              "is": {
                "type": "array",
                "title": "Optional Image Urls",
                "maxItems": 50,
                "items": {
                  "type": "object",
                  "properties": {
                    "u": {
                      "title": "Image Url",
                      "type": "string"
                    }
                  },
                  "required": ["u"]
                }
              },
              "vs": {
                "type": "array",
                "title": "Optional Video Urls",
                "maxItems": 5,
                "items": {
                  "type": "object",
                  "properties": {
                    "u": {
                      "title": "Video Url",
                      "type": "string"
                    }
                  },
                  "required": ["u"]
                }
              }
            },
            "required": ["t", "s", "d"]
          }
        }
      }
    },
    "form": [
      "co",
      {
        "key": "ss",
        "add": "New",
        "style": {
          "add": "btn-success"
        },
        "items": [
          {
            "key": "ss[].t",
            "type": "timestamp"
          },
          "ss[].s",
          {
            "key": "ss[].d",
            "type": "textarea"
          },
          {
            "key": "ss[].is",
            "add": "New URL",
            "style": {
              "add": "btn-success"
            },
            "items": ["ss[].is[].u"]
          },
          {
            "key": "ss[].vs",
            "add": "New URL",
            "style": {
              "add": "btn-success"
            },
            "items": ["ss[].vs[].u"]
          }
        ]
      }
    ]
  },
  "testTokenForm": {
    "formId": "testTokenForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "playground",
        "action": "generateJwt",
        "version": "0.1.0",
        "title": "Generate Test Token",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["client_id"],
      "title": "JWT Claims",
      "properties": {
        "exp": {
          "type": "integer",
          "title": "Expires in Second"
        },
        "client_id": {
          "type": "string",
          "title": "Client Id"
        },
        "user_id": {
          "type": "string",
          "title": "User Id"
        },
        "roles": {
          "type": "string",
          "title": "Roles Separated with Space"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string",
            "title": "Scope"
          }
        }
      }
    },
    "form": ["*"]
  },
  "signupForm": {
    "formId": "signupForm",
    "skipAuth": true,
    "actions": [
      {
        "host": "lightapi.net",
        "service": "user",
        "action": "createUser",
        "version": "0.1.0",
        "title": "SignUp",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "User Registration",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "default": "N2CMw0HGQXeLvC1wBfln2A"
        },
        "email": {
          "title": "Email",
          "type": "string",
          "pattern": "^\\S+@\\S+$",
          "validationMessage": "Email must be of proper format: example@example.com"
        },
        "entityId": {
          "title": "Entity Id",
          "type": "string"
        },
        "userType": {
          "title": "User Type",
          "type": "string"
        },
        "referralId": {
          "type": "string",
          "title": "Referral Id or Email"
        },
        "managerId": {
          "type": "string",
          "title": "Manager Id or Email"
        },
        "language": {
          "type": "string",
          "default": "en",
          "enum": ["en"]
        },
        "password": {
          "type": "string"
        },
        "passwordConfirm": {
          "type": "string"
        },
        "firstName": {
          "type": "string",
          "title": "First Name"
        },
        "lastName": {
          "type": "string",
          "title": "Last Name"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Phone Number"
        },
        "gender": {
          "type": "string",
          "title": "Gender"
        },
        "birthday": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postCode": {
          "type": "string"
        }
      },
      "required": [
        "hostId",
        "email",
        "entityId",
        "userType",
        "language",
        "password",
        "passwordConfirm"
      ]
    },
    "form": [
      {
        "key": "hostId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22host%22%2C%22action%22%3A%22getHostLabel%22%2C%22version%22%3A%220.1.0%22%7D"
        }
      },
      "email",
      "entityId",
      {
        "key": "userType",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=user_type"
        }
      },
      {
        "condition": "model.userType === 'C'",
        "key": "referralId"
      },
      {
        "condition": "model.userType === 'E'",
        "key": "managerId"
      },
      "language",
      {
        "key": "password",
        "type": "password"
      },
      {
        "key": "passwordConfirm",
        "type": "password"
      },
      "firstName",
      "lastName",
      "phoneNumber",
      {
        "key": "gender",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "M",
            "label": "Male"
          },
          {
            "id": "F",
            "label": "Female"
          }
        ]
      },
      {
        "key": "birthday",
        "type": "date"
      },
      {
        "key": "country",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=country"
        }
      },
      {
        "key": "province",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=province&rela=country-province&from={0}",
          "params": ["country"]
        }
      },
      "city",
      "address",
      "postCode"
    ]
  },
  "changePasswordForm": {
    "formId": "changePasswordForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "user",
        "action": "changePassword",
        "version": "0.1.0",
        "title": "Change Password",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Change Password",
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "passwordConfirm": {
          "type": "string"
        }
      },
      "required": ["oldPassword", "newPassword", "passwordConfirm"]
    },
    "form": [
      {
        "key": "oldPassword",
        "type": "password"
      },
      {
        "key": "newPassword",
        "type": "password"
      },
      {
        "key": "passwordConfirm",
        "type": "password"
      }
    ]
  },
  "updateUser": {
    "formId": "updateUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "user",
        "action": "updateUserById",
        "version": "0.1.0",
        "title": "Update Profile",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "User Profile",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "email": {
          "type": "string",
          "title": "Email",
          "pattern": "^\\S+@\\S+$",
          "validationMessage": "Email must be of proper format: example@example.com",
          "readonly": true
        },
        "userId": {
          "type": "string",
          "title": "User Id",
          "readonly": true
        },
        "entityId": {
          "type": "string",
          "title": "Entity Id",
          "readonly": true
        },
        "userType": {
          "type": "string",
          "title": "User Type",
          "readonly": true
        },
        "referralId": {
          "type": "string",
          "title": "Referral Id or Email"
        },
        "managerId": {
          "type": "string",
          "title": "Manager Id or Email"
        },
        "language": {
          "type": "string",
          "title": "Language",
          "enum": ["en"]
        },
        "firstName": {
          "type": "string",
          "title": "First Name"
        },
        "lastName": {
          "type": "string",
          "title": "Last Name"
        },
        "phoneNumber": {
          "type": "string",
          "title": "Phone Number"
        },
        "gender": {
          "type": "string",
          "title": "Gender"
        },
        "birthday": {
          "type": "string",
          "title": "Birthday"
        },
        "country": {
          "type": "string",
          "title": "Country"
        },
        "province": {
          "type": "string",
          "title": "Province"
        },
        "city": {
          "type": "string",
          "title": "City"
        },
        "postCode": {
          "type": "string",
          "title": "Post Code"
        },
        "address": {
          "type": "string",
          "title": "Address"
        }
      },
      "required": [
        "hostId",
        "email",
        "userId",
        "entityId",
        "userType",
        "language"
      ]
    },
    "form": [
      "hostId",
      "email",
      "userId",
      "entityId",
      "userType",
      "referralId",
      "managerId",
      "language",
      "firstName",
      "lastName",
      "phoneNumber",
      {
        "key": "gender",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "M",
            "label": "Male"
          },
          {
            "id": "F",
            "label": "Female"
          }
        ]
      },
      {
        "key": "birthday",
        "type": "date"
      },
      {
        "key": "country",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=country"
        }
      },
      {
        "key": "province",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=province&rela=country-province&from={0}",
          "params": ["country"]
        }
      },
      "city",
      "address",
      "postCode"
    ]
  },
  "covidMapForm": {
    "formId": "covidMapForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "getCityMap",
        "version": "0.1.0",
        "path": "/portal/query",
        "title": "Map Query",
        "success": "/app/covid/map",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Query Map",
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "subcategory": {
          "type": "string"
        }
      },
      "required": ["country", "province", "city", "category"]
    },
    "form": [
      {
        "key": "country",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=country"
        }
      },
      {
        "key": "province",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=province&rela=ctry-prov&from={0}",
          "params": ["country"]
        }
      },
      {
        "key": "city",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=city&rela=prov-city&from={0}",
          "params": ["province"]
        }
      },
      {
        "key": "category",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=covid-category"
        }
      },
      {
        "key": "subcategory",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=covid-subcategory&rela=cov-cat&from={0}",
          "params": ["category"]
        }
      }
    ]
  },
  "covidCity": {
    "formId": "covidCity",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "getCity",
        "version": "0.1.0",
        "path": "/portal/query",
        "title": "City Profile",
        "success": "/app/covid/cityProfile",
        "failure": "/app/covid/cityRegistry"
      }
    ],
    "schema": {
      "title": "Query Location",
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      },
      "required": ["country", "province", "city"]
    },
    "form": [
      {
        "key": "country",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=country"
        }
      },
      {
        "key": "province",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=province&rela=ctry-prov&from={0}",
          "params": ["country"]
        }
      },
      {
        "key": "city",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=city&rela=prov-city&from={0}",
          "params": ["province"]
        }
      }
    ]
  },
  "createCityMap": {
    "formId": "createCityMap",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "createCityMap",
        "version": "0.1.0",
        "title": "City Map",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create City Map",
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "description": "latitude"
        },
        "longitude": {
          "type": "number",
          "description": "longitude"
        },
        "zoom": {
          "type": "integer",
          "description": "initial zoom"
        }
      },
      "required": [
        "country",
        "province",
        "city",
        "latitude",
        "longitude",
        "zoom"
      ]
    },
    "form": [
      {
        "key": "country",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=country"
        }
      },
      {
        "key": "province",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=province&rela=ctry-prov&from={0}",
          "params": ["country"]
        }
      },
      {
        "key": "city",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=city&rela=prov-city&from={0}",
          "params": ["province"]
        }
      },
      "latitude",
      "longitude",
      "zoom"
    ]
  },
  "updateCityMap": {
    "formId": "updateCityMap",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "updateCityMap",
        "version": "0.1.0",
        "title": "City Map",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update City Map",
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "readonly": true
        },
        "province": {
          "type": "string",
          "readonly": true
        },
        "city": {
          "type": "string",
          "readonly": true
        },
        "latitude": {
          "type": "number",
          "description": "latitude"
        },
        "longitude": {
          "type": "number",
          "description": "longitude"
        },
        "zoom": {
          "type": "integer",
          "description": "initial zoom"
        }
      },
      "required": [
        "country",
        "province",
        "city",
        "latitude",
        "longitude",
        "zoom"
      ]
    },
    "form": ["country", "province", "city", "latitude", "longitude", "zoom"]
  },
  "createCovidEntity": {
    "formId": "createCovidEntity",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "createEntity",
        "version": "0.1.0",
        "title": "Entity Profile",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Entity",
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "subcategory": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "description": "latitude"
        },
        "longitude": {
          "type": "number",
          "description": "longitude"
        },
        "introduction": {
          "type": "string",
          "description": "introduction"
        }
      },
      "required": [
        "category",
        "subcategory",
        "latitude",
        "longitude",
        "introduction"
      ]
    },
    "form": [
      {
        "key": "category",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=covid-category"
        }
      },
      {
        "key": "subcategory",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=covid-subcategory&rela=cov-cat&from={0}",
          "params": ["category"]
        }
      },
      "latitude",
      "longitude",
      "introduction"
    ]
  },
  "updateCovidEntity": {
    "formId": "updateCovidEntity",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "covid",
        "action": "updateEntity",
        "version": "0.1.0",
        "title": "Entity Profile",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Entity",
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "subcategory": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "description": "latitude"
        },
        "longitude": {
          "type": "number",
          "description": "longitude"
        },
        "introduction": {
          "type": "string",
          "description": "introduction"
        }
      },
      "required": [
        "category",
        "subcategory",
        "latitude",
        "longitude",
        "introduction"
      ]
    },
    "form": [
      {
        "key": "category",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=covid-category"
        }
      },
      {
        "key": "subcategory",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=covid-subcategory&rela=cov-cat&from={0}",
          "params": ["category"]
        }
      },
      "latitude",
      "longitude",
      "introduction"
    ]
  },
  "privateMessage": {
    "formId": "privateMessage",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "user",
        "action": "sendMessage",
        "version": "0.1.0",
        "title": "Private Message",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Private Message",
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "required": ["userId", "subject", "content"]
    },
    "form": [
      "userId",
      "subject",
      {
        "key": "content",
        "type": "textarea"
      }
    ]
  },
  "service": {
    "schema": {
      "type": "object",
      "required": ["serviceId", "serviceName", "serviceType", "scope"],
      "properties": {
        "serviceId": {
          "title": "Service ID",
          "type": "string"
        },
        "serviceType": {
          "title": "Service Type",
          "type": "string",
          "enum": ["swagger", "openapi", "graphql", "hybrid"]
        },
        "serviceName": {
          "title": "Serivce Name",
          "type": "string"
        },
        "serviceDesc": {
          "title": "Service Description",
          "type": "string"
        },
        "ownerId": {
          "title": "Owner ID",
          "type": "string"
        },
        "scope": {
          "title": "Scope",
          "type": "string"
        }
      }
    }
  },
  "user": {
    "schema": {
      "type": "object",
      "required": ["userId", "userType", "firstName", "lastName", "email"],
      "properties": {
        "userId": {
          "title": "User ID",
          "type": "string"
        },
        "userType": {
          "title": "User Type",
          "type": "string",
          "enum": ["admin", "employee", "customer", "partner"]
        },
        "firstName": {
          "title": "First Name",
          "type": "string"
        },
        "lastName": {
          "title": "Last Name",
          "type": "string"
        },
        "email": {
          "title": "Email",
          "type": "string",
          "format": "email"
        },
        "password": {
          "title": "Password",
          "type": "string",
          "format": "password"
        },
        "passwordConfirm": {
          "title": "Password Confirm",
          "type": "string",
          "format": "password"
        }
      }
    }
  },
  "password": {
    "schema": {
      "type": "object",
      "required": ["password", "newPassword", "newPasswordConfirm"],
      "properties": {
        "password": {
          "title": "Password",
          "type": "string",
          "format": "password"
        },
        "newPassword": {
          "title": "New Password",
          "type": "string",
          "format": "password"
        },
        "newPasswordConfirm": {
          "title": "New Password Confirm",
          "type": "string",
          "format": "password"
        }
      }
    }
  },
  "createClient": {
    "formId": "createClient",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "client",
        "action": "createClient",
        "version": "0.1.0",
        "title": "Create Client",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "host",
        "clientType",
        "clientProfile",
        "clientName",
        "clientDesc",
        "scope"
      ],
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "lob": {
          "type": "string",
          "description": "Line of Business"
        },
        "clientType": {
          "title": "Client Type",
          "type": "string",
          "enum": ["confidential", "public", "trusted", "external"]
        },
        "clientProfile": {
          "title": "Client Profile",
          "type": "string",
          "enum": ["webserver", "browser", "mobile", "service", "batch"]
        },
        "clientName": {
          "title": "Client Name",
          "type": "string"
        },
        "clientDesc": {
          "title": "Client Description",
          "type": "string"
        },
        "scope": {
          "title": "Scope",
          "type": "string"
        },
        "customClaim": {
          "title": "Custom Claim",
          "type": "string"
        },
        "redirectUri": {
          "title": "Redirect URI",
          "type": "string"
        },
        "authenticateClass": {
          "title": "Authenticate Class",
          "type": "string"
        },
        "derefClientId": {
          "title": "Dereference Client Id",
          "type": "string"
        },
        "serviceId": {
          "title": "Reference Service Id",
          "type": "string"
        }
      }
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      {
        "key": "lob",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=lob&rela=host-lob&from={0}",
          "params": ["host"]
        }
      },
      "clientType",
      "clientProfile",
      "clientName",
      {
        "key": "clientDesc",
        "type": "textarea"
      },
      "scope",
      {
        "key": "customClaim",
        "type": "textarea"
      },
      "redirectUri",
      "authenticateClass",
      "derefClientId",
      "serviceId"
    ]
  },
  "updateClient": {
    "formId": "updateClient",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "client",
        "action": "updateClient",
        "version": "0.1.0",
        "title": "Update Client",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "host",
        "clientType",
        "clientProfile",
        "clientName",
        "clientDesc",
        "scope"
      ],
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "lob": {
          "type": "string",
          "description": "Line of Business"
        },
        "clientId": {
          "title": "Client Id",
          "type": "string",
          "readonly": true
        },
        "clientType": {
          "title": "Client Type",
          "type": "string",
          "enum": ["confidential", "public", "trusted", "external"]
        },
        "clientProfile": {
          "title": "Client Profile",
          "type": "string",
          "enum": ["webserver", "browser", "mobile", "service", "batch"]
        },
        "clientName": {
          "title": "Client Name",
          "type": "string"
        },
        "clientDesc": {
          "title": "Client Description",
          "type": "string"
        },
        "scope": {
          "title": "Scope",
          "type": "string"
        },
        "customClaim": {
          "title": "Custom Claim",
          "type": "string"
        },
        "redirectUri": {
          "title": "Redirect URI",
          "type": "string"
        },
        "authenticateClass": {
          "title": "Authenticate Class",
          "type": "string"
        },
        "derefClientId": {
          "title": "Dereference Client ID",
          "type": "string"
        },
        "serviceId": {
          "title": "Reference Service Id",
          "type": "string"
        }
      }
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      {
        "key": "lob",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=lob&rela=host-lob&from={0}",
          "params": ["host"]
        }
      },
      "clientId",
      "clientType",
      "clientProfile",
      "clientName",
      {
        "key": "clientDesc",
        "type": "textarea"
      },
      "scope",
      {
        "key": "customClaim",
        "type": "textarea"
      },
      "redirectUri",
      "authenticateClass",
      "derefClientId",
      "serviceId"
    ]
  },
  "createService": {
    "formId": "createService",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "service",
        "action": "createService",
        "version": "0.1.0",
        "title": "Create Service",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "apiId",
        "apiName",
        "serviceId",
        "apiType",
        "apiStatus"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "serviceId": {
          "title": "Service Id",
          "type": "string"
        },
        "apiName": {
          "title": "Api Name",
          "type": "string"
        },
        "apiType": {
          "title": "Api Type",
          "type": "string"
        },
        "apiDesc": {
          "title": "Api Desc",
          "type": "string"
        },
        "operationOwner": {
          "title": "Operation Owner",
          "type": "string"
        },
        "deliveryOwner": {
          "title": "Delivery Owner",
          "type": "string"
        },
        "region": {
          "title": "Region",
          "type": "string"
        },
        "businessGroup": {
          "title": "Business Group",
          "type": "string"
        },
        "lob": {
          "title": "Line of Business",
          "type": "string"
        },
        "platform": {
          "title": "Platform",
          "type": "string"
        },
        "capability": {
          "title": "Capability",
          "type": "string"
        },
        "gitRepo": {
          "title": "Git Repo",
          "type": "string"
        },
        "apiStatus": {
          "title": "Api Status",
          "type": "string"
        },
        "apiTags": {
          "title": "Api Tags",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "apiId",
      "serviceId",
      "apiName",
      {
        "key": "apiType",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=api_type&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiDesc",
        "type": "textarea"
      },
      "operationOwner",
      "deliveryOwner",
      {
        "key": "region",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=region&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "businessGroup",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=business_group&host={0}&rela=region-bgrp&from={1}",
          "params": ["hostId", "region"]
        }
      },
      {
        "key": "lob",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=lob&host={0}&rela=bgrp-lob&from={1}",
          "params": ["hostId", "businessGroup"]
        }
      },
      {
        "key": "platform",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=platform_journer&host={0}&rela=lob-platform&from={1}",
          "params": ["hostId", "lob"]
        }
      },
      {
        "key": "capability",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=capability&host={0}&rela=platform-capability&from={1}",
          "params": ["hostId", "platform"]
        }
      },
      "gitRepo",
      {
        "key": "apiStatus",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=api_status&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiTags",
        "type": "dynaselect",
        "multiple": true,
        "action": {
          "url": "/r/data?name=api_tag&host={0}",
          "params": ["hostId"]
        }
      }
    ]
  },
  "updateService": {
    "formId": "updateService",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "service",
        "action": "updateService",
        "version": "0.1.0",
        "title": "Update Service",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "host",
        "lob",
        "style",
        "apiId",
        "serviceId",
        "name",
        "desc",
        "tags",
        "status"
      ],
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "lob": {
          "title": "Line of Business",
          "type": "string"
        },
        "style": {
          "title": "API Style",
          "type": "string",
          "enum": ["openapi", "graphql", "hybrid"]
        },
        "apiId": {
          "title": "Api Id - four digit unique number",
          "type": "string",
          "pattern": "\\b\\d{4}\\b"
        },
        "serviceId": {
          "title": "Service Id",
          "type": "string",
          "readonly": true
        },
        "name": {
          "title": "Service Name",
          "type": "string"
        },
        "desc": {
          "title": "Service Description",
          "type": "string"
        },
        "status": {
          "title": "Service Status",
          "type": "string",
          "enum": ["published", "implemented", "deployed", "decommissioned"]
        },
        "tags": {
          "title": "Tags",
          "type": "array",
          "minItems": 0,
          "maxItems": 10
        }
      }
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      {
        "key": "lob",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=lob&rela=host-lob&from={0}",
          "params": ["host"]
        }
      },
      "style",
      "apiId",
      "serviceId",
      "name",
      {
        "key": "desc",
        "type": "textarea"
      },
      "status",
      {
        "key": "tags",
        "type": "rc-select",
        "multiple": true,
        "tags": true,
        "maxTagTextLength": 20,
        "action": {
          "url": "/r/data?name=tag"
        }
      }
    ]
  },
  "createEndpointRule": {
    "formId": "createEndpointRule",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "service",
        "action": "createEndpointRule",
        "version": "0.1.0",
        "title": "Create Endpoint Rule",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "apiId",
        "apiVersion",
        "endpoint",
        "ruleType",
        "ruleId"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "apiId": {
          "title": "Api Id",
          "type": "string",
          "readonly": true
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string",
          "readonly": true
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string",
          "readonly": true
        },
        "ruleType": {
          "title": "Rule Type",
          "type": "string"
        },
        "ruleId": {
          "title": "Rule Id",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "apiId",
      "apiVersion",
      "endpoint",
      {
        "key": "ruleType",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=rule_type&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "ruleId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22rule%22%2C%22action%22%3A%22getRuleByType%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22ruleType%22%3A%22{1}%22%7D%7D%0A%0A",
          "params": ["hostId", "ruleType"]
        }
      }
    ]
  },
  "updateServiceAccess": {
    "formId": "updateServiceAccess",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "service",
        "action": "updateServiceAccess",
        "version": "0.1.0",
        "title": "Update Service Request Access",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["host", "serviceId", "endpoint", "accesses"],
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "readonly": true
        },
        "serviceId": {
          "title": "Service Id",
          "type": "string",
          "readonly": true
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string",
          "readonly": true
        },
        "accesses": {
          "type": "array",
          "title": "Accesses",
          "maxItems": 5,
          "items": {
            "type": "object",
            "properties": {
              "ruleId": {
                "title": "Rule Id",
                "type": "string"
              },
              "roles": {
                "type": "array",
                "title": "Roles",
                "maxItems": 10,
                "items": {
                  "type": "string"
                }
              },
              "variables": {
                "title": "Variables",
                "type": "string"
              }
            },
            "required": ["ruleId"]
          }
        }
      }
    },
    "form": [
      "host",
      "serviceId",
      "endpoint",
      {
        "key": "accesses",
        "add": "New",
        "style": {
          "add": "btn-success"
        },
        "items": [
          {
            "key": "accesses[].ruleId",
            "type": "dynaselect",
            "multiple": true,
            "action": {
              "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22rule%22%2C%22action%22%3A%22getRuleByType%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22{0}%22%2C%22ruleType%22%3A%22request-access%22%7D%7D",
              "params": ["host"]
            }
          },
          {
            "key": "accesses[].roles",
            "type": "dynaselect",
            "multiple": true,
            "tags": true,
            "maxTagTextLength": 20,
            "action": {
              "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getServiceRoleById%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22serviceId%22%3A%22{0}%22%7D%7D",
              "params": ["serviceId"]
            }
          },
          "accesses[].variables"
        ]
      }
    ]
  },
  "updateServiceFilter": {
    "formId": "updateServiceFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "service",
        "action": "updateServiceFilter",
        "version": "0.1.0",
        "title": "Update Service Response Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["host", "serviceId", "endpoint", "filters"],
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "readonly": true
        },
        "serviceId": {
          "title": "Service Id",
          "type": "string",
          "readonly": true
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string",
          "readonly": true
        },
        "filters": {
          "type": "array",
          "title": "Filters",
          "maxItems": 5,
          "items": {
            "type": "object",
            "properties": {
              "ruleId": {
                "title": "Rule Id",
                "type": "string"
              },
              "variables": {
                "title": "Variables",
                "type": "string"
              }
            },
            "required": ["ruleId"]
          }
        }
      }
    },
    "form": [
      "host",
      "serviceId",
      "endpoint",
      {
        "key": "filters",
        "add": "New",
        "style": {
          "add": "btn-success"
        },
        "items": [
          {
            "key": "filters[].ruleId",
            "type": "rc-select",
            "filterOption": true,
            "action": {
              "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22rule%22%2C%22action%22%3A%22getRuleByType%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22{0}%22%2C%22ruleType%22%3A%22response-filter%22%7D%7D",
              "params": ["host"]
            }
          },
          "filters[].variables"
        ]
      }
    ]
  },
  "createRole": {
    "formId": "createRole",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "createRole",
        "version": "0.1.0",
        "title": "Create Role",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "roleId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string"
        },
        "roleDesc": {
          "title": "Role Desc",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "roleId",
      {
        "key": "roleDesc",
        "type": "textarea",
        "placeholder": "Role Description",
        "rows": 5
      }
    ]
  },
  "updateRole": {
    "formId": "updateRole",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "updateRole",
        "version": "0.1.0",
        "title": "Update Role",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "roleId", "roleDesc"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string",
          "readonly": true
        },
        "roleDesc": {
          "title": "Role Desc",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "roleId",
      {
        "key": "roleDesc",
        "type": "textarea",
        "placeholder": "Role Description",
        "rows": 5
      }
    ]
  },
  "createRoleUser": {
    "formId": "createRoleUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "createRoleUser",
        "version": "0.1.0",
        "title": "Create Role User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "roleId", "userId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string"
        },
        "userId": {
          "title": "User Id",
          "type": "string"
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "roleId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22role%22%2C%22action%22%3A%22getRoleLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "userId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "startTs",
      "endTs"
    ]
  },
  "updateRoleUser": {
    "formId": "updateRoleUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "updateRoleUser",
        "version": "0.1.0",
        "title": "Update Role User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "roleId", "userId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string",
          "readonly": true
        },
        "userId": {
          "title": "User Id",
          "type": "string",
          "readonly": true
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": ["hostId", "roleId", "userId", "startTs", "endTs"]
  },
  "createRolePermission": {
    "formId": "createRolePermission",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "createRolePermission",
        "version": "0.1.0",
        "title": "Create Role Permission",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "roleId", "apiId", "apiVersion", "endpoint"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "roleId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22role%22%2C%22action%22%3A%22getRoleLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      }
    ]
  },
  "createRoleRowFilter": {
    "formId": "createRoleRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "createRoleRowFilter",
        "version": "0.1.0",
        "title": "Create Role Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "roleId",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "roleId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22role%22%2C%22action%22%3A%22getRoleLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "updateRoleRowFilter": {
    "formId": "updateRoleRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "updateRoleRowFilter",
        "version": "0.1.0",
        "title": "Update Role Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "roleId",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "roleId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22role%22%2C%22action%22%3A%22getRoleLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "createRoleColFilter": {
    "formId": "createRoleColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "createRoleColFilter",
        "version": "0.1.0",
        "title": "Create Role Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "roleId",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "roleId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22role%22%2C%22action%22%3A%22getRoleLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },
  "updateRoleColFilter": {
    "formId": "updateRoleColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "role",
        "action": "updateRoleColFilter",
        "version": "0.1.0",
        "title": "Update Role Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "roleId",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "roleId": {
          "title": "Role Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "roleId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22role%22%2C%22action%22%3A%22getRoleLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },
  "createGroup": {
    "formId": "createGroup",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "createGroup",
        "version": "0.1.0",
        "title": "Create Group",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "groupId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string"
        },
        "groupDesc": {
          "title": "Group Desc",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "groupId",
      {
        "key": "groupDesc",
        "type": "textarea",
        "placeholder": "Group Description",
        "rows": 5
      }
    ]
  },
  "updateGroup": {
    "formId": "updateGroup",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "updateGroup",
        "version": "0.1.0",
        "title": "Update Group",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "groupId", "groupDesc"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string",
          "readonly": true
        },
        "groupDesc": {
          "title": "Group Desc",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "groupId",
      {
        "key": "groupDesc",
        "type": "textarea",
        "placeholder": "Group Description",
        "rows": 5
      }
    ]
  },
  "createGroupUser": {
    "formId": "createGroupUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "createGroupUser",
        "version": "0.1.0",
        "title": "Create Group User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "groupId", "userId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string"
        },
        "userId": {
          "title": "User Id",
          "type": "string"
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "groupId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22group%22%2C%22action%22%3A%22getGroupLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "userId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "startTs",
      "endTs"
    ]
  },
  "updateGroupUser": {
    "formId": "updateGroupUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "updateGroupUser",
        "version": "0.1.0",
        "title": "Update Group User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "groupId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string",
          "readonly": true
        },
        "userId": {
          "title": "User Id",
          "type": "string",
          "readonly": true
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": ["hostId", "groupId", "userId", "startTs", "endTs"]
  },
  "createGroupPermission": {
    "formId": "createGroupPermission",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "createGroupPermission",
        "version": "0.1.0",
        "title": "Create Group Permission",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "groupId", "apiId", "apiVersion", "endpoint"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "groupId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22group%22%2C%22action%22%3A%22getGroupLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      }
    ]
  },
  "createGroupRowFilter": {
    "formId": "createGroupRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "createGroupRowFilter",
        "version": "0.1.0",
        "title": "Create Group Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "groupId",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "groupId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22group%22%2C%22action%22%3A%22getGroupLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "updateGroupRowFilter": {
    "formId": "updateGroupRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "updateGroupRowFilter",
        "version": "0.1.0",
        "title": "Update Group Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "groupId",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "groupId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22group%22%2C%22action%22%3A%22getGroupLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "createGroupColFilter": {
    "formId": "createGroupColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "createGroupColFilter",
        "version": "0.1.0",
        "title": "Create Group Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "groupId",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "groupId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22group%22%2C%22action%22%3A%22getGroupLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },
  "updateGroupColFilter": {
    "formId": "updateGroupColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "group",
        "action": "updateGroupColFilter",
        "version": "0.1.0",
        "title": "Update Group Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "groupId",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "groupId": {
          "title": "Group Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "groupId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22group%22%2C%22action%22%3A%22getGroupLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },
  "createAttribute": {
    "formId": "createAttribute",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "createAttribute",
        "version": "0.1.0",
        "title": "Create Attribute",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "attributeId", "attributeType"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string"
        },
        "attributeType": {
          "title": "Attribute Type",
          "type": "string"
        },
        "attributeDesc": {
          "title": "Attribute Desc",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "attributeId",
      {
        "key": "attributeType",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=attribute_type&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "attributeDesc",
        "type": "textarea",
        "placeholder": "Attribute Description",
        "rows": 5
      }
    ]
  },
  "updateAttribute": {
    "formId": "updateAttribute",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "updateAttribute",
        "version": "0.1.0",
        "title": "Update Attribute",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "attributeId", "attributeType", "attributeDesc"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string",
          "readonly": true
        },
        "attributeType": {
          "title": "Attribute Type",
          "type": "string"
        },
        "attributeDesc": {
          "title": "Attribute Desc",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "attributeId",
      {
        "key": "attributeType",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=attribute_type&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "attributeDesc",
        "type": "textarea",
        "placeholder": "Attribute Description",
        "rows": 5
      }
    ]
  },
  "createAttributeUser": {
    "formId": "createAttributeUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "createAttributeUser",
        "version": "0.1.0",
        "title": "Create Attribute User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "attributeId", "attributeValue", "userId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string"
        },
        "attributeValue": {
          "title": "Attribute Value",
          "type": "string"
        },
        "userId": {
          "title": "User Id",
          "type": "string"
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "attributeId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22attribute%22%2C%22action%22%3A%22getAttributeLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "attributeValue",
      {
        "key": "userId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "startDate",
      "endDate"
    ]
  },
  "updateAttributeUser": {
    "formId": "updateAttributeUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "updateAttributeUser",
        "version": "0.1.0",
        "title": "Update Attribute User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "attributeId", "attributeValue", "userId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string",
          "readonly": true
        },
        "attributeValue": {
          "title": "Attribute Value",
          "type": "string"
        },
        "userId": {
          "title": "User Id",
          "type": "string",
          "readonly": true
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": [
      "hostId",
      "attributeId",
      "attributeValue",
      "userId",
      "startDate",
      "endDate"
    ]
  },
  "createAttributePermission": {
    "formId": "createAttributePermission",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "createAttributePermission",
        "version": "0.1.0",
        "title": "Create Attribute Permission",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "attributeId",
        "attributeValue",
        "apiId",
        "apiVersion",
        "endpoint"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string"
        },
        "attributeValue": {
          "title": "Attribute Value",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "attributeId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22attribute%22%2C%22action%22%3A%22getAttributeLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "attributeValue",
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      }
    ]
  },
  "createAttributeRowFilter": {
    "formId": "createAttributeRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "createAttributeRowFilter",
        "version": "0.1.0",
        "title": "Create Attribute Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "attributeId",
        "attributeValue",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string"
        },
        "attributeValue": {
          "title": "Attribute Value",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "attributeId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22attribute%22%2C%22action%22%3A%22getAttributeLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "attributeValue",
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "updateAttributeRowFilter": {
    "formId": "updateAttributeRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "updateAttributeRowFilter",
        "version": "0.1.0",
        "title": "Update Attribute Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "attributeId",
        "attributeValue",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string"
        },
        "attributeValue": {
          "title": "Attribute Value",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "attributeId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22attribute%22%3A%22attribute%22%2C%22action%22%3A%22getAttributeLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "attributeValue",
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "createAttributeColFilter": {
    "formId": "createAttributeColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "createAttributeColFilter",
        "version": "0.1.0",
        "title": "Create Attribute Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "attributeId",
        "attributeValue",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string"
        },
        "attributeValue": {
          "title": "Attribute Value",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "attributeId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22attribute%22%2C%22action%22%3A%22getAttributeLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "attributeValue",
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },
  "updateAttributeColFilter": {
    "formId": "updateAttributeColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "attribute",
        "action": "updateAttributeColFilter",
        "version": "0.1.0",
        "title": "Update Attribute Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "attributeId",
        "attributeValue",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "attributeId": {
          "title": "Attribute Id",
          "type": "string"
        },
        "attributeValue": {
          "title": "Attribute Value",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "attributeId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22attribute%22%2C%22action%22%3A%22getAttributeLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "attributeValue",
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },

  "createPosition": {
    "formId": "createPosition",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "createPosition",
        "version": "0.1.0",
        "title": "Create Position",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "positionId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string"
        },
        "positionDesc": {
          "title": "Position Desc",
          "type": "string"
        },
        "inheritToAncestor": {
          "title": "Inherit To Ancestor",
          "type": "string"
        },
        "inheritToSibling": {
          "title": "Inherit To Sibling",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "positionId",
      {
        "key": "positionDesc",
        "type": "textarea",
        "placeholder": "Position Description",
        "rows": 5
      },
      {
        "key": "inheritToAncestor",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "Y",
            "label": "Yes"
          },
          {
            "id": "N",
            "label": "No"
          }
        ]
      },
      {
        "key": "inheritToSibling",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "Y",
            "label": "Yes"
          },
          {
            "id": "N",
            "label": "No"
          }
        ]
      }
    ]
  },
  "updatePosition": {
    "formId": "updatePosition",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "updatePosition",
        "version": "0.1.0",
        "title": "Update Position",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "positionId", "positionDesc"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string",
          "readonly": true
        },
        "positionDesc": {
          "title": "Position Desc",
          "type": "string"
        },
        "inheritToAncestor": {
          "title": "Inherit To Ancestor",
          "type": "string"
        },
        "inheritToSibling": {
          "title": "Inherit To Sibling",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      "positionId",
      {
        "key": "positionDesc",
        "type": "textarea",
        "placeholder": "Position Description",
        "rows": 5
      },
      {
        "key": "inheritToAncestor",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "Y",
            "label": "Yes"
          },
          {
            "id": "N",
            "label": "No"
          }
        ]
      },
      {
        "key": "inheritToSibling",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "Y",
            "label": "Yes"
          },
          {
            "id": "N",
            "label": "No"
          }
        ]
      }
    ]
  },
  "createPositionUser": {
    "formId": "createPositionUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "createPositionUser",
        "version": "0.1.0",
        "title": "Create Position User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "positionId", "userId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string"
        },
        "userId": {
          "title": "User Id",
          "type": "string"
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "positionId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22position%22%2C%22action%22%3A%22getPositionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "userId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      },
      "startTs",
      "endTs"
    ]
  },
  "updatePositionUser": {
    "formId": "updatePositionUser",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "updatePositionUser",
        "version": "0.1.0",
        "title": "Update Position User",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "positionId"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string",
          "readonly": true
        },
        "userId": {
          "title": "User Id",
          "type": "string",
          "readonly": true
        },
        "entityId": {
          "title": "Entity Id",
          "type": "string",
          "readonly": true
        },
        "email": {
          "title": "Email",
          "type": "string",
          "readonly": true
        },
        "startTs": {
          "title": "Start Timestamp",
          "type": "string",
          "format": "date-time"
        },
        "endTs": {
          "title": "End Timestamp",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "form": [
      "hostId",
      "positionId",
      "userId",
      "entityId",
      "email",
      "startTs",
      "endTs"
    ]
  },
  "createPositionPermission": {
    "formId": "createPositionPermission",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "createPositionPermission",
        "version": "0.1.0",
        "title": "Create Position Permission",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": ["hostId", "positionId", "apiId", "apiVersion", "endpoint"],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "positionId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22position%22%2C%22action%22%3A%22getPositionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      }
    ]
  },
  "createPositionRowFilter": {
    "formId": "createPositionRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "createPositionRowFilter",
        "version": "0.1.0",
        "title": "Create Position Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "positionId",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "positionId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22position%22%2C%22action%22%3A%22getPositionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "updatePositionRowFilter": {
    "formId": "updatePositionRowFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "updatePositionRowFilter",
        "version": "0.1.0",
        "title": "Update Position Row Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "positionId",
        "apiId",
        "apiVersion",
        "endpoint",
        "colName",
        "operator",
        "colValue"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "colName": {
          "title": "Column Name",
          "type": "string"
        },
        "operator": {
          "title": "Operator",
          "type": "string"
        },
        "colValue": {
          "title": "Column Value",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "positionId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22position%22%2C%22action%22%3A%22getPositionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "colName",
      {
        "key": "operator",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=filter_operator&host={0}",
          "params": ["hostId"]
        }
      },
      "colValue"
    ]
  },
  "createPositionColFilter": {
    "formId": "createPositionColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "createPositionColFilter",
        "version": "0.1.0",
        "title": "Create Position Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "positionId",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "positionId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22position%22%2C%22action%22%3A%22getPositionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },
  "updatePositionColFilter": {
    "formId": "updatePositionColFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "position",
        "action": "updatePositionColFilter",
        "version": "0.1.0",
        "title": "Update Position Col Filter",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "hostId",
        "positionId",
        "apiId",
        "apiVersion",
        "endpoint",
        "columns"
      ],
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "positionId": {
          "title": "Position Id",
          "type": "string"
        },
        "apiId": {
          "title": "Api Id",
          "type": "string"
        },
        "apiVersion": {
          "title": "Api Version",
          "type": "string"
        },
        "endpoint": {
          "title": "Endpoint",
          "type": "string"
        },
        "columns": {
          "title": "Columns",
          "type": "string"
        }
      }
    },
    "form": [
      "hostId",
      {
        "key": "positionId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22position%22%2C%22action%22%3A%22getPositionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiId",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%7D%7D%0A%0A",
          "params": ["hostId"]
        }
      },
      {
        "key": "apiVersion",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getApiVersionLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%7D%7D%0A%0A%0A",
          "params": ["hostId", "apiId"]
        }
      },
      {
        "key": "endpoint",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22service%22%2C%22action%22%3A%22getEndpointLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22{0}%22%2C%22apiId%22%3A%22{1}%22%2C%22apiVersion%22%3A%22{2}%22%7D%7D",
          "params": ["hostId", "apiId", "apiVersion"]
        }
      },
      "columns"
    ]
  },

  "token": {
    "schema": {
      "type": "object",
      "required": ["client_id", "client_secret", "grant_type"],
      "properties": {
        "client_id": {
          "title": "Client ID",
          "type": "string"
        },
        "client_secret": {
          "title": "Client Secret",
          "type": "string"
        },
        "grant_type": {
          "title": "Grant Type",
          "type": "string",
          "enum": ["authorization_code", "client_credentials"]
        }
      }
    }
  },
  "specDetailForm": {
    "formId": "specDetailForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "config",
        "action": "uploadFiles",
        "version": "0.1.0",
        "title": "Upload Spec&Config",
        "success": "/app/success",
        "failure": "/app/failure"
      },
      {
        "host": "lightapi.net",
        "service": "config",
        "action": "inputConfig",
        "version": "0.1.0",
        "title": "Input Config Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "host",
        "lob",
        "style",
        "name",
        "version",
        "desc",
        "tags",
        "status"
      ],
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "lob": {
          "title": "Line of Business",
          "type": "string"
        },
        "style": {
          "title": "API Style",
          "type": "string",
          "enum": ["Restful", "GraphQL", "Hybrid"]
        },
        "name": {
          "title": "API Name",
          "type": "string"
        },
        "version": {
          "title": "API Version",
          "type": "string"
        },
        "desc": {
          "title": "API Description",
          "type": "string"
        },
        "status": {
          "title": "API Status",
          "type": "string",
          "enum": ["published", "implemented", "deployed", "decommissioned"]
        },
        "tags": {
          "title": "Tags",
          "type": "array",
          "minItems": 0,
          "maxItems": 10
        }
      }
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      {
        "key": "lob",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=lob&rela=host-lob&from={0}",
          "params": ["host"]
        }
      },
      "style",
      "name",
      "version",
      {
        "key": "desc",
        "type": "textarea"
      },
      "status",
      {
        "key": "tags",
        "type": "rc-select",
        "multiple": true,
        "tags": true,
        "maxTagTextLength": 20,
        "action": {
          "url": "/r/data?name=tag"
        }
      }
    ]
  },
  "configDetailForm": {
    "formId": "configOptionForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "config",
        "action": "upload",
        "version": "0.1.0",
        "title": "Upload Spec",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "required": [
        "name",
        "version",
        "attributeId",
        "artifactId",
        "rootPackage",
        "handlerPackage",
        "modelPackage",
        "overwriteHandler",
        "overwriteHandlerTest",
        "overwriteModel",
        "httpPort",
        "enableHttp",
        "httpsPort",
        "enableHttps",
        "enableRegistry",
        "eclipseIDE",
        "supportDb",
        "supportH2ForTest",
        "supportClient",
        "dockerOrganization"
      ],
      "properties": {
        "name": {
          "title": "API Name",
          "type": "string"
        },
        "version": {
          "title": "API Version",
          "type": "string"
        },
        "attribute": {
          "title": "Maven Group",
          "type": "string"
        },
        "artifactId": {
          "title": "Artifact Id",
          "type": "string"
        },
        "rootPackage": {
          "title": "Root Package",
          "type": "string"
        },
        "handlerPackage": {
          "title": "Handler Package",
          "type": "string"
        },
        "modelPackage": {
          "title": "Model Package",
          "type": "string"
        },
        "overwriteHandler": {
          "title": "Overwrite Handler",
          "type": "boolean",
          "default": true
        },
        "overwriteHandlerTest": {
          "title": "Overwrite Handler Test",
          "type": "boolean",
          "default": true
        },
        "overwriteModel": {
          "title": "Overwrite Model",
          "type": "boolean",
          "default": true
        },
        "httpPort": {
          "title": "HTTP Port",
          "type": "integer",
          "default": 8080
        },
        "enableHttp": {
          "title": "Enable HTTP",
          "type": "boolean",
          "default": false
        },
        "httpsPort": {
          "title": "HTTPS Port",
          "type": "integer",
          "default": 8443
        },
        "enableHttps": {
          "title": "Enable HTTPS",
          "type": "boolean",
          "default": true
        },
        "enableRegistry": {
          "title": "Enable Registry",
          "type": "boolean",
          "default": false
        },
        "eclipseIDE": {
          "title": "Eclipse IDE",
          "type": "boolean",
          "default": false
        },
        "supportDb": {
          "title": "Support Database",
          "type": "boolean",
          "default": false
        },
        "dbInfo": {
          "type": "object",
          "title": "Database Info",
          "properties": {
            "name": {
              "type": "string",
              "title": "Database Name",
              "default": "mysql"
            },
            "driverClassName": {
              "type": "string",
              "title": "Driver Class Name",
              "default": "jdbc:mysql://mysqldb:3306/oauth2?useSSL=false"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            }
          }
        },
        "supportH2ForTest": {
          "title": "Support H2 Test",
          "type": "boolean",
          "default": false
        },
        "supportClient": {
          "title": "Support Client",
          "type": "boolean",
          "default": false
        },
        "dockerOrganization": {
          "title": "Docker Organization",
          "type": "string",
          "default": "networknt"
        }
      }
    },
    "form": [
      "name",
      "version",
      "attributeId",
      "artifactId",
      "rootPackage",
      "handlerPackage",
      "modelPackage",
      "overwriteHandler",
      "overwriteHandlerTest",
      "overwriteModel",
      "httpPort",
      "enableHttp",
      "httpsPort",
      "enableHttps",
      "enableRegistry",
      "eclipseIDE",
      "supportDb",
      {
        "key": "dbInfo",
        "condition": "model.supportDb"
      },
      "supportH2ForTest",
      "supportClient",
      "dockerOrganization"
    ]
  },
  "createRefTable": {
    "formId": "createRefTable",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "createTable",
        "version": "0.1.0",
        "title": "Create Ref Table",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Ref Table",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "tableId": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "tableDesc": {
          "type": "string"
        },
        "active": {
          "type": "string",
          "enum": ["Y", "N"]
        },
        "editable": {
          "type": "string",
          "enum": ["Y", "N"]
        },
        "common": {
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": [
        "host",
        "tableId",
        "tableName",
        "tableDesc",
        "active",
        "editable",
        "common"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      "tableId",
      "tableName",
      "tableDesc",
      "active",
      "editable",
      "common"
    ]
  },
  "updateRefTable": {
    "formId": "updateRefTable",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "updateTable",
        "version": "0.1.0",
        "title": "Update Ref Table",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Ref Table",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "tableId": {
          "type": "string",
          "readonly": true
        },
        "tableName": {
          "type": "string"
        },
        "tableDesc": {
          "type": "string"
        },
        "active": {
          "type": "string",
          "enum": ["Y", "N"]
        },
        "editable": {
          "type": "string",
          "enum": ["Y", "N"]
        },
        "common": {
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": [
        "host",
        "tableId",
        "tableName",
        "tableDesc",
        "active",
        "editable",
        "common"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      "tableId",
      "tableName",
      "tableDesc",
      "active",
      "editable",
      "common"
    ]
  },
  "createRefValue": {
    "formId": "createRefValue",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "createValue",
        "version": "0.1.0",
        "title": "Create Ref Value",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Ref Value",
      "type": "object",
      "properties": {
        "tableId": {
          "type": "string",
          "readonly": true
        },
        "valueId": {
          "type": "string"
        },
        "valueCode": {
          "type": "string"
        },
        "displayOrder": {
          "type": "integer"
        },
        "active": {
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": ["tableId", "valueId", "valueCode", "displayOrder", "active"]
    },
    "form": ["tableId", "valueId", "valueCode", "displayOrder", "active"]
  },
  "updateRefValue": {
    "formId": "updateRefValue",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "updateValue",
        "version": "0.1.0",
        "title": "Update Ref Value",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Ref Value",
      "type": "object",
      "properties": {
        "tableId": {
          "type": "string",
          "readonly": true
        },
        "valueId": {
          "type": "string",
          "readonly": true
        },
        "valueCode": {
          "type": "string"
        },
        "displayOrder": {
          "type": "integer"
        },
        "active": {
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": ["tableId", "valueId", "valueCode", "displayOrder", "active"]
    },
    "form": ["tableId", "valueId", "valueCode", "displayOrder", "active"]
  },
  "createRefLocale": {
    "formId": "createRefLocale",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "createLocale",
        "version": "0.1.0",
        "title": "Create Ref Locale",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Ref Locale",
      "type": "object",
      "properties": {
        "valueId": {
          "type": "string",
          "readonly": true
        },
        "language": {
          "type": "string"
        },
        "valueDesc": {
          "type": "string"
        }
      },
      "required": ["valueId", "language", "valueDesc"]
    },
    "form": [
      "valueId",
      {
        "key": "language",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=language"
        }
      },
      "valueDesc"
    ]
  },
  "updateRefLocale": {
    "formId": "updateRefLocale",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "updateLocale",
        "version": "0.1.0",
        "title": "Update Ref Locale",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Ref Locale",
      "type": "object",
      "properties": {
        "valueId": {
          "type": "string",
          "readonly": true
        },
        "language": {
          "type": "string",
          "readonly": true
        },
        "valueDesc": {
          "type": "string"
        }
      },
      "required": ["valueId", "language", "valueDesc"]
    },
    "form": ["valueId", "language", "valueDesc"]
  },
  "createRefRelaType": {
    "formId": "createRefRelaType",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "createRelationType",
        "version": "0.1.0",
        "title": "Create Rela Type",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Rela Type",
      "type": "object",
      "properties": {
        "relationId": {
          "type": "string"
        },
        "relationName": {
          "type": "string"
        },
        "relationDesc": {
          "type": "string"
        }
      },
      "required": ["relationId", "relationName", "relationDesc"]
    },
    "form": ["relationId", "relationName", "relationDesc"]
  },
  "updateRefRelaType": {
    "formId": "updateRefRelaType",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "updateRelationType",
        "version": "0.1.0",
        "title": "Update Rela Type",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Rela Type",
      "type": "object",
      "properties": {
        "relationId": {
          "type": "string",
          "readonly": true
        },
        "relationName": {
          "type": "string"
        },
        "relationDesc": {
          "type": "string"
        }
      },
      "required": ["relatioId", "relationName", "relationDesc"]
    },
    "form": ["relationId", "relationName", "relationDesc"]
  },
  "key": {
    "schema": {
      "type": "object",
      "required": ["client_id", "client_secret", "key_id"],
      "properties": {
        "client_id": {
          "title": "Client ID",
          "type": "string"
        },
        "client_secret": {
          "title": "Client Secret",
          "type": "string"
        },
        "key_id": {
          "title": "Key ID",
          "type": "string"
        }
      }
    }
  },
  "createRefRelation": {
    "formId": "createRefRelation",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "createRelation",
        "version": "0.1.0",
        "title": "Create Relation",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Relation",
      "type": "object",
      "properties": {
        "relationId": {
          "title": "Relation Id",
          "type": "string"
        },
        "valueIdFrom": {
          "title": "Value Id From",
          "type": "string"
        },
        "valueIdTo": {
          "title": "Value Id To",
          "type": "string"
        },
        "active": {
          "title": "Active",
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": ["relationId", "valueIdFrom", "valueIdTo", "active"]
    },
    "form": ["relationId", "valueIdFrom", "valueIdTo", "active"]
  },
  "updateRefRelation": {
    "formId": "updateRefRelation",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "updateRelation",
        "version": "0.1.0",
        "title": "Update Relation",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Relation",
      "type": "object",
      "properties": {
        "relationId": {
          "title": "Relation Id",
          "type": "string"
        },
        "valueIdFrom": {
          "title": "Value Id From",
          "type": "string"
        },
        "valueIdTo": {
          "title": "Value Id To",
          "type": "string"
        },
        "active": {
          "title": "Active",
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": ["relationId", "valueIdFrom", "valueIdTo", "active"]
    },
    "form": ["relationId", "valueIdFrom", "valueIdTo", "active"]
  },
  "deleteRefRelation": {
    "formId": "deleteRefRelation",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "ref",
        "action": "deleteRelation",
        "version": "0.1.0",
        "title": "Delete Relation",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Relation",
      "type": "object",
      "properties": {
        "relationId": {
          "title": "Relation Id",
          "type": "string"
        },
        "valueIdFrom": {
          "title": "Value Id From",
          "type": "string"
        },
        "valueIdTo": {
          "title": "Value Id To",
          "type": "string"
        }
      },
      "required": ["relationId", "valueIdFrom", "valueIdTo"]
    },
    "form": ["relationId", "valueIdFrom", "valueIdTo"]
  },
  "listQuiz": {
    "formId": "listQuiz",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "edu",
        "action": "listQuiz",
        "version": "0.1.0",
        "title": "List Quiz",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Quiz",
      "type": "object",
      "properties": {
        "quizType": {
          "title": "Quiz Type",
          "type": "string"
        },
        "category": {
          "title": "Quiz Category",
          "type": "string"
        },
        "subCategory": {
          "title": "Quiz Sub Category",
          "type": "string"
        },
        "active": {
          "title": "Active",
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": ["quizType", "category", "subCategory", "active"]
    },
    "form": ["quizType", "category", "subCategory", "active"]
  },
  "createQuiz": {
    "formId": "createQuiz",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "edu",
        "action": "createQuiz",
        "version": "0.1.0",
        "title": "Create Quiz",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Quiz",
      "type": "object",
      "properties": {
        "quizName": {
          "title": "Quiz Name",
          "type": "string"
        },
        "language": {
          "title": "Quiz Language",
          "type": "string"
        },
        "quizType": {
          "title": "Quiz Type",
          "type": "string"
        },
        "purpose": {
          "title": "Quiz Purpose",
          "type": "string"
        },
        "category": {
          "title": "Quiz Category",
          "type": "string"
        },
        "subCategory": {
          "title": "Quiz Sub Category",
          "type": "string"
        },
        "question": {
          "title": "Question",
          "type": "string"
        },
        "answerType": {
          "type": "string",
          "title": "Answer Type",
          "default": "single",
          "enum": ["single", "multiple", "text", "image", "audio", "video"]
        },
        "answerOptions": {
          "type": "array",
          "maxItems": 6,
          "minItems": 2,
          "items": {
            "type": "object",
            "properties": {
              "content": {
                "type": "stirng",
                "title": "Content"
              },
              "correct": {
                "type": "boolean",
                "default": false,
                "title": "Correct?"
              }
            }
          }
        },
        "active": {
          "title": "Active",
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": [
        "quizName",
        "language",
        "quizType",
        "purpose",
        "category",
        "subCategory",
        "active",
        "question",
        "answerType",
        "answerOptions"
      ]
    },
    "form": [
      "quizName",
      "language",
      "quizType",
      "purpose",
      "category",
      "subCategory",
      "active",
      {
        "key": "question",
        "type": "markdown"
      },
      "answerType",
      {
        "key": "answerOptions",
        "type": "array",
        "items": [
          {
            "key": "answerOptions[].correct",
            "type": "checkbox"
          },
          {
            "key": "answerOptions[].content",
            "type": "markdown"
          }
        ]
      }
    ]
  },
  "updateQuiz": {
    "formId": "updateQuiz",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "edu",
        "action": "updateQuiz",
        "version": "0.1.0",
        "title": "Update Quiz",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Quiz",
      "type": "object",
      "properties": {
        "quizId": {
          "title": "Quiz Id",
          "type": "string",
          "readonly": true
        },
        "quizName": {
          "title": "Quiz Name",
          "type": "string"
        },
        "language": {
          "title": "Language",
          "type": "string"
        },
        "quizType": {
          "title": "Quiz Type",
          "type": "string"
        },
        "purpose": {
          "title": "Quiz Purpose",
          "type": "string"
        },
        "category": {
          "title": "Quiz Category",
          "type": "string"
        },
        "subCategory": {
          "title": "Quiz Sub Category",
          "type": "string"
        },
        "question": {
          "title": "Question",
          "type": "string"
        },
        "answerType": {
          "type": "string",
          "title": "Answer Type",
          "default": "single",
          "enum": ["single", "multiple", "text", "image", "audio", "video"]
        },
        "answerOptions": {
          "type": "array",
          "maxItems": 6,
          "minItems": 2,
          "items": {
            "type": "object",
            "properties": {
              "content": {
                "type": "stirng",
                "title": "Content"
              },
              "correct": {
                "type": "boolean",
                "default": false,
                "title": "Correct?"
              }
            }
          }
        },
        "active": {
          "title": "Active",
          "type": "string",
          "enum": ["Y", "N"]
        }
      },
      "required": [
        "quizId",
        "quizName",
        "language",
        "quizType",
        "purpose",
        "category",
        "subCategory",
        "active",
        "question",
        "answer"
      ]
    },
    "form": [
      "quizId",
      "quizName",
      "language",
      "quizType",
      "purpose",
      "category",
      "subCategory",
      "active",
      {
        "key": "question",
        "type": "markdown"
      },
      "answerType",
      {
        "key": "answerOptions",
        "type": "array",
        "items": [
          {
            "key": "answerOptions[].correct",
            "type": "checkbox"
          },
          {
            "key": "answerOptions[].content",
            "type": "markdown"
          }
        ]
      }
    ]
  },
  "deleteQuiz": {
    "formId": "deleteQuiz",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "edu",
        "action": "deleteQuiz",
        "version": "0.1.0",
        "title": "Delete Quiz",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Quiz",
      "type": "object",
      "properties": {
        "quizId": {
          "title": "Quiz Id",
          "type": "string"
        }
      },
      "required": ["quizId"]
    },
    "form": ["quizId"]
  },
  "schemaFormFilter": {
    "formId": "schemaFormFilter",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "form",
        "action": "getSchemaForm",
        "version": "0.1.0",
        "path": "/portal/query",
        "title": "Schema Form Query",
        "success": "/app/market/schemaForm",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Query Schema Form",
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "title": "Category"
        },
        "subcategory": {
          "type": "string",
          "title": "Sub Category"
        }
      },
      "required": ["category", "subcategory"]
    },
    "form": [
      {
        "key": "category",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=schema-category"
        }
      },
      {
        "key": "subcategory",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=schema-subcategory&rela=schema-cat-sub&from={0}",
          "params": ["category"]
        }
      }
    ]
  },
  "createSchemaForm": {
    "formId": "createSchemaForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "form",
        "action": "createSchemaForm",
        "version": "0.1.0",
        "title": "Create Schema Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Schema Form",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "id": {
          "title": "Form Id",
          "type": "string"
        },
        "name": {
          "title": "Form Name",
          "type": "string"
        },
        "definition": {
          "title": "Form Definition",
          "type": "string"
        },
        "desc": {
          "title": "Form Description",
          "type": "string"
        },
        "imageUrl": {
          "title": "Image URL",
          "type": "string"
        },
        "categories": {
          "type": "array",
          "title": "Categories",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "type": "string",
            "title": "category"
          }
        }
      },
      "required": [
        "host",
        "id",
        "name",
        "definition",
        "desc",
        "imageUrl",
        "categories"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      "id",
      "name",
      {
        "key": "definition",
        "type": "textarea",
        "placeholder": "Copy/paste your schema form JSON definition here",
        "rows": 20
      },
      {
        "key": "desc",
        "type": "markdown"
      },
      "imageUrl",
      {
        "key": "categories",
        "type": "taxonomy",
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22category%22%2C%22action%22%3A%22getCategoryByName%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22name%22%3A%22form%22%7D%7D"
        }
      }
    ]
  },
  "updateSchemaForm": {
    "formId": "updateSchemaForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "form",
        "action": "updateSchemaForm",
        "version": "0.1.0",
        "title": "Update Schema Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Schema Form",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "readonly": true
        },
        "id": {
          "title": "Form Id",
          "type": "string",
          "readonly": true
        },
        "name": {
          "title": "Form Name",
          "type": "string"
        },
        "definition": {
          "title": "Form Definition",
          "type": "string"
        },
        "desc": {
          "title": "Form Description",
          "type": "string"
        },
        "imageUrl": {
          "title": "Image URL",
          "type": "string"
        },
        "categories": {
          "type": "array",
          "title": "Categories",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "type": "string",
            "title": "category"
          }
        }
      },
      "required": [
        "host",
        "id",
        "name",
        "definition",
        "desc",
        "imageUrl",
        "categories"
      ]
    },
    "form": [
      "host",
      "id",
      "name",
      {
        "key": "definition",
        "type": "textarea",
        "placeholder": "Copy/paste your schema form JSON definition here",
        "rows": 20
      },
      {
        "key": "desc",
        "type": "markdown"
      },
      "imageUrl",
      {
        "key": "categories",
        "type": "taxonomy",
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22category%22%2C%22action%22%3A%22getCategoryByName%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22name%22%3A%22form%22%7D%7D"
        }
      }
    ]
  },
  "deleteSchemaForm": {
    "id": "deleteSchemaForm",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "form",
        "action": "deleteSchemaForm",
        "version": "0.1.0",
        "title": "Delete Schema Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Schema Form",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "id": {
          "title": "Form Id",
          "type": "string"
        }
      },
      "required": ["host", "id"]
    },
    "form": ["host", "id"]
  },
  "createError": {
    "formId": "createError",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "error",
        "action": "createError",
        "version": "0.1.0",
        "title": "Create Error",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Error",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "errorCode": {
          "title": "Error Code",
          "type": "string"
        },
        "statusCode": {
          "type": "integer",
          "description": "Status Code"
        },
        "message": {
          "type": "string",
          "description": "Error Message"
        },
        "description": {
          "type": "string",
          "description": "Error Description"
        },
        "components": {
          "type": "array",
          "description": "Error Component",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string",
          "description": "Contact Email"
        },
        "phone": {
          "type": "string",
          "description": "Contact Number"
        },
        "severity": {
          "type": "string",
          "description": "Severity Level",
          "enum": ["S0", "S1", "S2", "S3"]
        },
        "resolution": {
          "type": "string",
          "description": "Error Resolution"
        }
      },
      "required": [
        "host",
        "errorCode",
        "statusCode",
        "message",
        "description",
        "components",
        "resolution"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      "errorCode",
      "statusCode",
      "message",
      "description",
      "components",
      "email",
      "phone",
      "severity",
      {
        "key": "resolution",
        "type": "markdown"
      }
    ]
  },
  "updateError": {
    "formId": "updateError",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "error",
        "action": "updateError",
        "version": "0.1.0",
        "title": "Update Error",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Error",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "readonly": true
        },
        "errorCode": {
          "title": "Error Code",
          "type": "string",
          "readonly": true
        },
        "statusCode": {
          "type": "integer",
          "description": "Status Code"
        },
        "message": {
          "type": "string",
          "description": "Error Message"
        },
        "description": {
          "type": "string",
          "description": "Error Description"
        },
        "components": {
          "type": "array",
          "description": "Error Component",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string",
          "description": "Error Owner",
          "readonly": true
        },
        "email": {
          "type": "string",
          "description": "Contact Email"
        },
        "phone": {
          "type": "string",
          "description": "Contact Number"
        },
        "severity": {
          "type": "string",
          "description": "Severity Level",
          "enum": ["S0", "S1", "S2", "S3"]
        },
        "resolution": {
          "type": "string",
          "description": "Error Resolution"
        }
      },
      "required": [
        "host",
        "errorCode",
        "statusCode",
        "message",
        "description",
        "components",
        "resolution"
      ]
    },
    "form": [
      "host",
      "errorCode",
      "statusCode",
      "message",
      "description",
      "components",
      "owner",
      "email",
      "phone",
      "severity",
      {
        "key": "resolution",
        "type": "markdown"
      }
    ]
  },
  "deleteError": {
    "id": "deleteError",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "error",
        "action": "deleteError",
        "version": "0.1.0",
        "title": "Delete Error",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Delete Error",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "errorCode": {
          "title": "Error Code",
          "type": "string"
        }
      },
      "required": ["host", "errorCode"]
    },
    "form": ["host", "errorCode"]
  },
  "createJsonSchema": {
    "formId": "createJsonSchema",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "schema",
        "action": "createJsonSchema",
        "version": "0.1.0",
        "title": "Create Schema",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Schema",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Schema Id"
        },
        "status": {
          "type": "string",
          "description": "Status",
          "enum": ["draft", "published"]
        },
        "version": {
          "title": "Schema Version",
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["v4", "v6", "v7", "v2019-09"]
          }
        },
        "name": {
          "type": "string",
          "description": "Schema Name"
        },
        "description": {
          "type": "string",
          "description": "Schema Description"
        },
        "email": {
          "type": "string",
          "description": "Contact Email"
        },
        "categories": {
          "type": "array",
          "description": "Categories",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "description": "Tags",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "type": "string",
          "description": "Json Schema"
        },
        "example": {
          "type": "string",
          "description": "Json Example"
        },
        "commentStatus": {
          "type": "string",
          "description": "Comment Open or Closed",
          "default": "O",
          "enum": ["O", "C"]
        }
      },
      "required": [
        "host",
        "id",
        "status",
        "version",
        "name",
        "description",
        "categories",
        "tags",
        "schema",
        "example",
        "commentStatus"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      "id",
      "status",
      {
        "key": "version",
        "type": "multiselect",
        "titleMap": [
          {
            "value": "v4",
            "name": "Draft-04"
          },
          {
            "value": "v6",
            "name": "Draft-06"
          },
          {
            "value": "v7",
            "name": "Draft-07"
          },
          {
            "value": "v2019-09",
            "name": "2019-09"
          }
        ]
      },
      "name",
      "description",
      "email",
      {
        "key": "categories",
        "type": "taxonomy",
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22category%22%2C%22action%22%3A%22getCategoryByName%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22name%22%3A%22schema%22%7D%7D"
        }
      },
      {
        "key": "tags",
        "type": "rc-select",
        "multiple": true,
        "tags": true,
        "maxTagTextLength": 20,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22tag%22%2C%22action%22%3A%22getTags%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22app%22%3A%22schema%22%7D%7D"
        }
      },
      {
        "key": "schema",
        "type": "textarea",
        "placeholder": "Plain text json schema",
        "rows": 10
      },
      {
        "key": "example",
        "type": "textarea",
        "placeholder": "Plain text json examples",
        "rows": 10
      },
      "commentStatus"
    ]
  },
  "updateJsonSchema": {
    "formId": "updateJsonSchema",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "schema",
        "action": "updateJsonSchema",
        "version": "0.1.0",
        "title": "Update Schema",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Schema",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "readonly": true
        },
        "id": {
          "type": "string",
          "description": "Schema Id",
          "readonly": true
        },
        "status": {
          "type": "string",
          "description": "Status",
          "enum": ["draft", "published"]
        },
        "version": {
          "title": "Schema Version",
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["v4", "v6", "v7", "v2019-09"]
          }
        },
        "name": {
          "type": "string",
          "description": "Schema Name"
        },
        "description": {
          "type": "string",
          "description": "Schema Description"
        },
        "owner": {
          "type": "string",
          "description": "Owner Id",
          "readonly": true
        },
        "email": {
          "type": "string",
          "description": "Contact Email"
        },
        "categories": {
          "type": "array",
          "description": "Categories",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "description": "Tags",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "schema": {
          "type": "string",
          "description": "Json Schema"
        },
        "example": {
          "type": "string",
          "description": "Json Example"
        },
        "commentStatus": {
          "type": "string",
          "description": "Comment Open or Closed",
          "default": "O",
          "enum": ["O", "C"]
        }
      },
      "required": [
        "host",
        "id",
        "status",
        "version",
        "name",
        "description",
        "owner",
        "categories",
        "tags",
        "schema",
        "example",
        "commentStatus"
      ]
    },
    "form": [
      "host",
      "id",
      "status",
      {
        "key": "version",
        "type": "multiselect",
        "titleMap": [
          {
            "value": "v4",
            "name": "Draft-04"
          },
          {
            "value": "v6",
            "name": "Draft-06"
          },
          {
            "value": "v7",
            "name": "Draft-07"
          },
          {
            "value": "v2019-09",
            "name": "2019-09"
          }
        ]
      },
      "name",
      "description",
      "owner",
      "email",
      {
        "key": "categories",
        "type": "taxonomy",
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22category%22%2C%22action%22%3A%22getCategoryByName%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22name%22%3A%22schema%22%7D%7D"
        }
      },
      {
        "key": "tags",
        "type": "rc-select",
        "multiple": true,
        "tags": true,
        "maxTagTextLength": 20,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22tag%22%2C%22action%22%3A%22getTags%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22app%22%3A%22schema%22%7D%7D"
        }
      },
      {
        "key": "schema",
        "type": "textarea",
        "placeholder": "Plain text summary",
        "rows": 10
      },
      {
        "key": "example",
        "type": "textarea",
        "placeholder": "Plain text json examples",
        "rows": 10
      },
      "commentStatus"
    ]
  },
  "createRule": {
    "formId": "createYamlRule",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "rule",
        "action": "createRule",
        "version": "0.1.0",
        "title": "Create Rule",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Rule",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "ruleId": {
          "title": "Rule Id",
          "type": "string"
        },
        "ruleName": {
          "title": "Rule Name",
          "type": "string"
        },
        "ruleVersion": {
          "title": "Rule Version",
          "type": "string"
        },
        "ruleType": {
          "title": "Rule Type",
          "type": "string"
        },
        "ruleGroup": {
          "title": "Rule Group",
          "type": "string"
        },
        "ruleDesc": {
          "title": "Rule Desc",
          "type": "string"
        },
        "ruleOwner": {
          "title": "Rule Owner",
          "type": "string"
        },
        "common": {
          "title": "Common",
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "conditionId": {
                "type": "string"
              },
              "conditionDesc": {
                "type": "string"
              },
              "propertyPath": {
                "type": "string"
              },
              "operatorCode": {
                "type": "string",
                "title": "Operator Code"
              },
              "index": {
                "type": "integer",
                "title": "Index from 1"
              },
              "conditionValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "conditionValueId": {
                      "type": "string"
                    },
                    "conditionValue": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "boolean"
                    },
                    "valueTypeCode": {
                      "type": "string",
                      "title": "Value Type Code"
                    },
                    "dateFormat": {
                      "type": "string"
                    },
                    "regexFlags": {
                      "type": "string"
                    }
                  },
                  "required": ["conditionValue"]
                }
              }
            },
            "required": ["conditionId", "propertyPath", "operatorCode", "index"]
          }
        },
        "conditionExpression": {
          "type": "string",
          "title": "Condition Expression"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "actionId": {
                "type": "string"
              },
              "actionDesc": {
                "type": "string"
              },
              "actionClassName": {
                "type": "string"
              },
              "conditionResult": {
                "type": "boolean"
              },
              "actionValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "actionValueId": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "valueTypeCode": {
                      "type": "string",
                      "title": "Value Type Code"
                    }
                  },
                  "required": ["actionValueId", "value"]
                }
              }
            },
            "required": ["actionId", "actionClassName"]
          }
        }
      },
      "required": [
        "hostId",
        "ruleId",
        "ruleName",
        "ruleVersion",
        "ruleType",
        "ruleOwner",
        "common",
        "conditions"
      ]
    },
    "form": [
      "hostId",
      "ruleId",
      "ruleName",
      "ruleVersion",
      {
        "key": "ruleType",
        "type": "dynaselect",
        "action": {
          "url": "/r/data?name=rule_type&host={0}",
          "params": ["hostId"]
        }
      },
      "ruleGroup",
      "ruleDesc",
      "ruleOwner",
      {
        "key": "common",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "Y",
            "label": "Yes"
          },
          {
            "id": "N",
            "label": "No"
          }
        ]
      },
      {
        "key": "conditions",
        "items": [
          "conditions[].conditionId",
          "conditions[].conditionDesc",
          "conditions[].propertyPath",
          {
            "key": "conditions[].operatorCode",
            "type": "dynaselect",
            "multiple": false,
            "options": [
              {
                "id": "equals",
                "label": "equals"
              },
              {
                "id": "on",
                "label": "on"
              },
              {
                "id": "before",
                "label": "before"
              },
              {
                "id": "after",
                "label": "after"
              },
              {
                "id": "lengthEquals",
                "label": "lengthEquals"
              },
              {
                "id": "greaterThanOrEqual",
                "label": "greaterThanOrEqual"
              },
              {
                "id": "lessThanOrEqual",
                "label": "lessThanOrEqual"
              },
              {
                "id": "isNotNull",
                "label": "isNotNull"
              },
              {
                "id": "isNull",
                "label": "isNull"
              },
              {
                "id": "contains",
                "label": "contains"
              },
              {
                "id": "match",
                "label": "match"
              },
              {
                "id": "notMatch",
                "label": "notMatch"
              },
              {
                "id": "isEmpty",
                "label": "isEmpty"
              },
              {
                "id": "isNotEmpty",
                "label": "isNotEmpty"
              },
              {
                "id": "isBlank",
                "label": "isBlank"
              },
              {
                "id": "isNotBlank",
                "label": "isNotBlank"
              },
              {
                "id": "lengthGreaterThan",
                "label": "lengthGreaterThan"
              },
              {
                "id": "lengthLessThan",
                "label": "lengthLessThan"
              },
              {
                "id": "inList",
                "label": "inList"
              },
              {
                "id": "greaterThan",
                "label": "greaterThan"
              },
              {
                "id": "containsIgnoreCase",
                "label": "containsIgnoreCase"
              },
              {
                "id": "startsWith",
                "label": "startsWith"
              }
            ]
          },
          "conditions[].index",
          {
            "key": "conditions[].conditionValues",
            "items": [
              "conditions[].conditionValues[].conditionValueId",
              "conditions[].conditionValues[].conditionValue",
              "conditions[].conditionValues[].expression",
              {
                "key": "conditions[].conditionValues[].valueTypeCode",
                "type": "dynaselect",
                "multiple": false,
                "options": [
                  {
                    "id": "STRING",
                    "label": "String"
                  },
                  {
                    "id": "INTEGER",
                    "label": "Integer"
                  },
                  {
                    "id": "BOOLEAN",
                    "label": "Boolean"
                  }
                ]
              },
              "conditions[].conditionValues[].dateFormat",
              "conditions[].conditionValues[].regexFlags"
            ]
          }
        ]
      },
      "conditionExpression",
      {
        "key": "actions",
        "items": [
          "actions[].actionId",
          "actions[].actionDesc",
          "actions[].actionClassName",
          "actions[].conditionResult",
          {
            "key": "actions[].actionValues",
            "items": [
              "actions[].actionValues[].actionValueId",
              "actions[].actionValues[].value",
              {
                "key": "actions[].actionValues[].valueTypeCode",
                "type": "dynaselect",
                "multiple": false,
                "options": [
                  {
                    "id": "STRING",
                    "label": "String"
                  },
                  {
                    "id": "INTEGER",
                    "label": "Integer"
                  },
                  {
                    "id": "BOOLEAN",
                    "label": "Boolean"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "updateRule": {
    "formId": "updateRule",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "rule",
        "action": "updateRule",
        "version": "0.1.0",
        "title": "Update Rule",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Rule",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "ruleId": {
          "title": "Rule Id",
          "type": "string",
          "readonly": true
        },
        "ruleName": {
          "title": "Rule Name",
          "type": "string"
        },
        "ruleVersion": {
          "title": "Rule Version",
          "type": "string"
        },
        "ruleType": {
          "type": "string",
          "title": "Rule Type"
        },
        "ruleGroup": {
          "type": "string",
          "title": "Rule Group"
        },
        "ruleDesc": {
          "type": "string",
          "title": "Rule Desc"
        },
        "ruleOwner": {
          "type": "string",
          "title": "Rule Owner"
        },
        "common": {
          "type": "string",
          "title": "Common"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "conditionId": {
                "type": "string"
              },
              "conditionDesc": {
                "type": "string"
              },
              "propertyPath": {
                "type": "string"
              },
              "operatorCode": {
                "type": "string",
                "title": "Operator Code"
              },
              "index": {
                "type": "integer",
                "title": "Index from 1"
              },
              "conditionValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "conditionValueId": {
                      "type": "string"
                    },
                    "conditionValue": {
                      "type": "string"
                    },
                    "expression": {
                      "type": "boolean"
                    },
                    "valueTypeCode": {
                      "type": "string",
                      "title": "Value Type Code"
                    },
                    "dateFormat": {
                      "type": "string"
                    },
                    "regexFlags": {
                      "type": "string"
                    }
                  },
                  "required": ["conditionValue"]
                }
              }
            },
            "required": ["conditionId", "propertyPath", "operatorCode", "index"]
          }
        },
        "conditionExpression": {
          "type": "string",
          "title": "Condition Expression"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "actionId": {
                "type": "string"
              },
              "actionDesc": {
                "type": "string"
              },
              "actionClassName": {
                "type": "string"
              },
              "conditionResult": {
                "type": "boolean"
              },
              "actionValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "actionValueId": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "valueTypeCode": {
                      "type": "string",
                      "title": "Value Type Code"
                    }
                  },
                  "required": ["actionValueId", "value"]
                }
              }
            },
            "required": ["actionId", "actionClassName"]
          }
        }
      },
      "required": [
        "hostId",
        "ruleId",
        "ruleName",
        "ruleVersion",
        "ruleType",
        "ruleOwner",
        "common",
        "conditions"
      ]
    },
    "form": [
      "hostId",
      "ruleId",
      "ruleName",
      "ruleVersion",
      {
        "key": "ruleType",
        "type": "dynaselect",
        "action": {
          "url": "/r/data?name=rule_type&host={0}",
          "params": ["hostId"]
        }
      },
      "ruleGroup",
      "ruleDesc",
      "ruleOwner",
      {
        "key": "common",
        "type": "dynaselect",
        "multiple": false,
        "options": [
          {
            "id": "Y",
            "label": "Yes"
          },
          {
            "id": "N",
            "label": "No"
          }
        ]
      },
      {
        "key": "conditions",
        "items": [
          "conditions[].conditionId",
          "conditions[].conditionDesc",
          "conditions[].propertyPath",
          {
            "key": "conditions[].operatorCode",
            "type": "dynaselect",
            "multiple": false,
            "options": [
              {
                "id": "equals",
                "label": "equals"
              },
              {
                "id": "on",
                "label": "on"
              },
              {
                "id": "before",
                "label": "before"
              },
              {
                "id": "after",
                "label": "after"
              },
              {
                "id": "lengthEquals",
                "label": "lengthEquals"
              },
              {
                "id": "greaterThanOrEqual",
                "label": "greaterThanOrEqual"
              },
              {
                "id": "lessThanOrEqual",
                "label": "lessThanOrEqual"
              },
              {
                "id": "isNotNull",
                "label": "isNotNull"
              },
              {
                "id": "isNull",
                "label": "isNull"
              },
              {
                "id": "contains",
                "label": "contains"
              },
              {
                "id": "match",
                "label": "match"
              },
              {
                "id": "notMatch",
                "label": "notMatch"
              },
              {
                "id": "isEmpty",
                "label": "isEmpty"
              },
              {
                "id": "isNotEmpty",
                "label": "isNotEmpty"
              },
              {
                "id": "isBlank",
                "label": "isBlank"
              },
              {
                "id": "isNotBlank",
                "label": "isNotBlank"
              },
              {
                "id": "lengthGreaterThan",
                "label": "lengthGreaterThan"
              },
              {
                "id": "lengthLessThan",
                "label": "lengthLessThan"
              },
              {
                "id": "inList",
                "label": "inList"
              },
              {
                "id": "greaterThan",
                "label": "greaterThan"
              },
              {
                "id": "containsIgnoreCase",
                "label": "containsIgnoreCase"
              },
              {
                "id": "startsWith",
                "label": "startsWith"
              }
            ]
          },
          "conditions[].index",
          {
            "key": "conditions[].conditionValues",
            "items": [
              "conditions[].conditionValues[].conditionValueId",
              "conditions[].conditionValues[].conditionValue",
              "conditions[].conditionValues[].expression",
              {
                "key": "conditions[].conditionValues[].valueTypeCode",
                "type": "dynaselect",
                "multiple": false,
                "options": [
                  {
                    "id": "STRING",
                    "label": "String"
                  },
                  {
                    "id": "INTEGER",
                    "label": "Integer"
                  },
                  {
                    "id": "BOOLEAN",
                    "label": "Boolean"
                  }
                ]
              },
              "conditions[].conditionValues[].dateFormat",
              "conditions[].conditionValues[].regexFlags"
            ]
          }
        ]
      },
      "conditionExpression",
      {
        "key": "actions",
        "items": [
          "actions[].actionId",
          "actions[].actionDesc",
          "actions[].actionClassName",
          "actions[].conditionResult",
          {
            "key": "actions[].actionValues",
            "items": [
              "actions[].actionValues[].actionValueId",
              "actions[].actionValues[].value",
              {
                "key": "actions[].actionValues[].valueTypeCode",
                "type": "dynaselect",
                "multiple": false,
                "options": [
                  {
                    "id": "STRING",
                    "label": "String"
                  },
                  {
                    "id": "INTEGER",
                    "label": "Integer"
                  },
                  {
                    "id": "BOOLEAN",
                    "label": "Boolean"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "deleteRule": {
    "id": "deleteRule",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "rule",
        "action": "deleteRule",
        "version": "0.1.0",
        "title": "Delete Rule",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Delete Rule",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string"
        },
        "ruleId": {
          "title": "Rule Id",
          "type": "string"
        }
      },
      "required": ["hostId", "ruleId"]
    },
    "form": ["hostId", "ruleId"]
  },
  "createCategory": {
    "formId": "createCategory",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "category",
        "action": "createCategory",
        "version": "0.1.0",
        "title": "Create Category",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Category",
      "required": ["host", "name", "categories"],
      "properties": {
        "host": {
          "type": "string",
          "title": "Category Host"
        },
        "name": {
          "type": "string",
          "title": "Category Name"
        },
        "categories": {
          "type": "array",
          "title": "Categories",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "title": "Label",
                "type": "string"
              },
              "value": {
                "title": "Value",
                "type": "string"
              },
              "children": {
                "title": "Children",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "title": "Label",
                      "type": "string"
                    },
                    "value": {
                      "title": "Value",
                      "type": "string"
                    },
                    "children": {
                      "title": "Children",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "title": "Label",
                            "type": "string"
                          },
                          "value": {
                            "title": "Value",
                            "type": "string"
                          },
                          "children": {
                            "title": "Children",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "title": "Label",
                                  "type": "string"
                                },
                                "value": {
                                  "title": "Value",
                                  "type": "string"
                                }
                              },
                              "required": ["label", "value"]
                            }
                          }
                        },
                        "required": ["label", "value"]
                      }
                    }
                  },
                  "required": ["label", "value"]
                }
              }
            },
            "required": ["label", "value"]
          }
        }
      }
    },
    "form": [
      {
        "type": "help",
        "description": "Construct categories. Try adding a couple of forms, reorder by drag'n'drop.",
        "variant": "h4",
        "align": "left",
        "color": "secondary"
      },
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      "name",
      {
        "key": "categories",
        "add": "New",
        "style": {
          "add": "btn-success"
        },
        "items": [
          "categories[].label",
          "categories[].value",
          {
            "key": "categories[].children",
            "items": [
              "categories[].children[].label",
              "categories[].children[].value",
              {
                "key": "categories[].children[].children",
                "items": [
                  "categories[].children[].children[].label",
                  "categories[].children[].children[].value",
                  {
                    "key": "categories[].children[].children[].children",
                    "items": [
                      "categories[].children[].children[].children[].label",
                      "categories[].children[].children[].children[].value"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "updateCategory": {
    "formId": "updateCategory",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "category",
        "action": "updateCategory",
        "version": "0.1.0",
        "title": "Update Category",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Category",
      "required": ["host", "name", "categories"],
      "properties": {
        "host": {
          "type": "string",
          "title": "Category Host",
          "readonly": true
        },
        "name": {
          "type": "string",
          "title": "Category Name",
          "readonly": true
        },
        "categories": {
          "type": "array",
          "title": "Categories",
          "maxItems": 100,
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "title": "Label",
                "type": "string"
              },
              "value": {
                "title": "Value",
                "type": "string"
              },
              "children": {
                "title": "Children",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "title": "Label",
                      "type": "string"
                    },
                    "value": {
                      "title": "Value",
                      "type": "string"
                    },
                    "children": {
                      "title": "Children",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "title": "Label",
                            "type": "string"
                          },
                          "value": {
                            "title": "Value",
                            "type": "string"
                          },
                          "children": {
                            "title": "Children",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "label": {
                                  "title": "Label",
                                  "type": "string"
                                },
                                "value": {
                                  "title": "Value",
                                  "type": "string"
                                }
                              },
                              "required": ["label", "value"]
                            }
                          }
                        },
                        "required": ["label", "value"]
                      }
                    }
                  },
                  "required": ["label", "value"]
                }
              }
            },
            "required": ["label", "value"]
          }
        }
      }
    },
    "form": [
      {
        "type": "help",
        "description": "Construct categories. Try adding a couple of forms, reorder by drag'n'drop.",
        "variant": "h4",
        "align": "left",
        "color": "secondary"
      },
      "host",
      "name",
      {
        "key": "categories",
        "add": "New",
        "style": {
          "add": "btn-success"
        },
        "items": [
          "categories[].label",
          "categories[].value",
          {
            "key": "categories[].children",
            "items": [
              "categories[].children[].label",
              "categories[].children[].value",
              {
                "key": "categories[].children[].children",
                "items": [
                  "categories[].children[].children[].label",
                  "categories[].children[].children[].value",
                  {
                    "key": "categories[].children[].children[].children",
                    "items": [
                      "categories[].children[].children[].children[].label",
                      "categories[].children[].children[].children[].value"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "createBlog": {
    "formId": "createBlog",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "blog",
        "action": "createBlog",
        "version": "0.1.0",
        "title": "Create Blog Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Blog Form",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string"
        },
        "id": {
          "title": "Blog Id",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["draft", "published"]
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string",
          "description": "Body"
        },
        "summary": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "description": "Categories",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "description": "Tags",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "featuredImageUrl": {
          "type": "string"
        },
        "commentStatus": {
          "type": "string",
          "default": "O",
          "enum": ["O", "C"]
        }
      },
      "required": [
        "host",
        "id",
        "status",
        "title",
        "body",
        "summary",
        "categories",
        "tags",
        "commentStatus"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=host"
        }
      },
      "id",
      "status",
      "title",
      {
        "key": "body",
        "type": "markdown"
      },
      {
        "key": "summary",
        "type": "textarea",
        "placeholder": "Plain text summary",
        "rows": 5
      },
      {
        "key": "categories",
        "type": "taxonomy",
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22category%22%2C%22action%22%3A%22getCategoryByName%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22name%22%3A%22blog%22%7D%7D"
        }
      },
      {
        "key": "tags",
        "type": "rc-select",
        "multiple": true,
        "tags": true,
        "maxTagTextLength": 20,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22tag%22%2C%22action%22%3A%22getTags%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22app%22%3A%22blog%22%7D%7D"
        }
      },
      "featuredImageUrl",
      {
        "key": "commentStatus",
        "titleMap": [
          { "value": "O", "name": "Open" },
          { "value": "C", "name": "Closed" }
        ]
      }
    ]
  },
  "propertiesRef": {
    "formId": "propertiesRef",
    "actions": [
      {
        "path": "/config-server/configs/property/search",
        "rest": true,
        "title": "Properties Criteria",
        "success": "/app/config/properties",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Properties Criteria",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=project&host={0}&cap={1}",
          "params": ["host", "cap"]
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=projver&host={0}&cap={1}&project={2}",
          "params": ["host", "cap", "project"]
        }
      },
      {
        "key": "scope",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=scope&host={0}&cap={1}&project={2}&projver={3}",
          "params": ["host", "cap", "project", "projver"]
        }
      }
    ]
  },
  "createConfigProperty": {
    "formId": "createConfigProperty",
    "actions": [
      {
        "path": "/config-server/configs/property",
        "rest": true,
        "method": "post",
        "title": "Property Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Property Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "scope",
        "key",
        "module",
        "type",
        "order"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=project&host={0}&cap={1}",
          "params": ["host", "cap"]
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=projver&host={0}&cap={1}&project={2}",
          "params": ["host", "cap", "project"]
        }
      },
      {
        "key": "scope",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=scope&host={0}&cap={1}&project={2}&projver={3}",
          "params": ["host", "cap", "project", "projver"]
        }
      },
      "key",
      "module",
      {
        "key": "type",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=cfg-prop-type"
        }
      },
      "order"
    ]
  },
  "updateConfigProperty": {
    "formId": "updateConfigProperty",
    "actions": [
      {
        "path": "/config-server/configs/property",
        "rest": true,
        "method": "put",
        "title": "Property Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Property Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readonly": true
        },
        "cap": {
          "type": "string",
          "readonly": true
        },
        "project": {
          "type": "string",
          "readonly": true
        },
        "projver": {
          "type": "string",
          "readonly": true
        },
        "scope": {
          "type": "string",
          "readonly": true
        },
        "key": {
          "type": "string",
          "readonly": true
        },
        "module": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "scope",
        "key",
        "module",
        "type",
        "order"
      ]
    },
    "form": [
      "host",
      "cap",
      "project",
      "projver",
      "scope",
      "key",
      "module",
      {
        "key": "type",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/r/data?name=cfg-prop-type"
        }
      },
      "order"
    ]
  },
  "globalsRef": {
    "formId": "globalsRef",
    "actions": [
      {
        "path": "/config-server/configs/global/search",
        "rest": true,
        "title": "Globals Criteria",
        "success": "/app/config/globalValues",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Globals Criteria",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "type": "string"
        },
        "env": {
          "type": "string"
        }
      },
      "required": ["host", "cap"]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/global/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/global/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/global/ref?name=env&project={0}",
          "params": ["project"]
        }
      }
    ]
  },
  "createGlobalValue": {
    "formId": "createGlobalValue",
    "actions": [
      {
        "path": "/config-server/configs/global",
        "rest": true,
        "method": "post",
        "title": "Global Value Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Global Value Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "title": "project version",
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "servver": {
          "title": "service version",
          "type": "string"
        },
        "env": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["host", "cap", "project", "key", "value"]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "service",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/global/ref?name=service"
        }
      },
      {
        "key": "servver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/global/ref?name=servver&service={0}",
          "params": ["service"]
        }
      },
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/global/ref?name=env&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "key",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=key&host={0}&cap={1}",
          "params": ["host", "cap"]
        }
      },
      "value"
    ]
  },
  "updateGlobalValue": {
    "formId": "updateGlobalValue",
    "actions": [
      {
        "path": "/config-server/configs/global",
        "rest": true,
        "method": "put",
        "title": "Global Value Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Global Value Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readonly": true
        },
        "cap": {
          "type": "string",
          "readonly": true
        },
        "project": {
          "type": "string",
          "readonly": true
        },
        "projver": {
          "type": "string",
          "readonly": true
        },
        "service": {
          "type": "string",
          "readonly": true
        },
        "servver": {
          "type": "string",
          "readonly": true
        },
        "env": {
          "type": "string",
          "readonly": true
        },
        "key": {
          "type": "string",
          "readonly": true
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["host", "cap", "key", "value"]
    },
    "form": [
      "host",
      "cap",
      "project",
      "projver",
      "service",
      "servver",
      "env",
      "key",
      "value"
    ]
  },
  "globalsFileRef": {
    "formId": "globalsFileRef",
    "actions": [
      {
        "path": "/config-server/files/global/search",
        "rest": true,
        "title": "Globals Criteria",
        "success": "/app/config/globalFiles",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Globals Criteria",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "type": "string"
        },
        "env": {
          "type": "string"
        }
      },
      "required": ["host", "cap"]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/files/global/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/files/global/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/files/global/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/files/global/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/files/global/ref?name=env&project={0}",
          "params": ["project"]
        }
      }
    ]
  },
  "createGlobalFile": {
    "formId": "createGlobalFile",
    "actions": [
      {
        "path": "/config-server/files/global",
        "rest": true,
        "method": "post",
        "title": "Global File Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Global File Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "title": "project version",
          "type": "string"
        },
        "env": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      },
      "required": ["host", "cap", "filename"]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/files/global/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/files/global/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/files/global/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/files/global/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/files/global/ref?name=env&project={0}",
          "params": ["project"]
        }
      },
      "filename"
    ]
  },
  "globalsCertRef": {
    "formId": "globalsCertRef",
    "actions": [
      {
        "path": "/config-server/certs/global/search",
        "rest": true,
        "title": "Globals Criteria",
        "success": "/app/config/globalCerts",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Globals Criteria",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "type": "string"
        },
        "env": {
          "type": "string"
        }
      },
      "required": ["host", "cap"]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=env&project={0}",
          "params": ["project"]
        }
      }
    ]
  },
  "createGlobalCert": {
    "formId": "createGlobalCert",
    "actions": [
      {
        "path": "/config-server/certs/global",
        "rest": true,
        "method": "post",
        "title": "Global Cert Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Global Cert Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "title": "project version",
          "type": "string"
        },
        "env": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      },
      "required": ["host", "cap", "filename"]
    },
    "form": [
      {
        "type": "help",
        "description": "Create a global cert entry with file name and then your can upload the cert file from the list view",
        "align": "left"
      },
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/certs/global/ref?name=env&project={0}",
          "params": ["project"]
        }
      },
      "filename"
    ]
  },
  "servicesRef": {
    "formId": "servicesRef",
    "actions": [
      {
        "path": "/config-server/configs/service/search",
        "rest": true,
        "title": "Services Criteria",
        "success": "/app/config/services",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Services Criteria",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "servver": {
          "type": "string"
        },
        "env": {
          "type": "string"
        }
      },
      "required": ["host", "cap"]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      {
        "key": "service",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=service&project={0}&projver={1}",
          "params": ["project", "projver"]
        }
      },
      {
        "key": "servver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=servver&project={0}&projver={1}&service={2}",
          "params": ["project", "projver", "service"]
        }
      },
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=env&project={0}&projver={1}&service={2}&servver={3}",
          "params": ["project", "projver", "service", "servver"]
        }
      }
    ]
  },
  "createConfigService": {
    "formId": "createConfigService",
    "actions": [
      {
        "path": "/config-server/configs/service",
        "rest": true,
        "method": "post",
        "title": "Service Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Service Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "cap": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "projver": {
          "title": "project version",
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "servver": {
          "title": "service version",
          "type": "string"
        },
        "env": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "service",
        "servver",
        "env"
      ]
    },
    "form": [
      {
        "key": "host",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=host"
        }
      },
      {
        "key": "cap",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=cap&host={0}",
          "params": ["host"]
        }
      },
      {
        "key": "project",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=project"
        }
      },
      {
        "key": "projver",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=projver&project={0}",
          "params": ["project"]
        }
      },
      "service",
      "servver",
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=env&project={0}&projver={1}",
          "params": ["project", "projver"]
        }
      }
    ]
  },
  "updateConfigService": {
    "formId": "updateConfigSerice",
    "actions": [
      {
        "path": "/config-server/configs/service",
        "rest": true,
        "method": "put",
        "title": "Service Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Service Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readonly": true
        },
        "cap": {
          "type": "string",
          "readonly": true
        },
        "project": {
          "type": "string",
          "readonly": true
        },
        "projver": {
          "type": "string",
          "readonly": true
        },
        "service": {
          "type": "string",
          "readonly": true
        },
        "servver": {
          "type": "string"
        },
        "env": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "service",
        "servver",
        "env"
      ]
    },
    "form": [
      "host",
      "cap",
      "project",
      "projver",
      "service",
      "servver",
      {
        "key": "env",
        "type": "rc-select",
        "filterOption": true,
        "combobox": true,
        "action": {
          "url": "/config-server/configs/service/ref?name=env&project={0}&projver={1}",
          "params": ["project", "projver"]
        }
      }
    ]
  },
  "createConfigServiceProperty": {
    "formId": "createConfigServiceProperty",
    "actions": [
      {
        "path": "/config-server/configs/service/property",
        "rest": true,
        "method": "post",
        "title": "Service Property Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Service Property Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readonly": true
        },
        "cap": {
          "type": "string",
          "readonly": true
        },
        "project": {
          "type": "string",
          "readonly": true
        },
        "projver": {
          "title": "project version",
          "type": "string",
          "readonly": true
        },
        "service": {
          "type": "string",
          "readonly": true
        },
        "servver": {
          "title": "service version",
          "type": "string",
          "readonly": true
        },
        "env": {
          "type": "string",
          "readonly": true
        },
        "sid": {
          "type": "integer",
          "readonly": true
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "service",
        "servver",
        "env",
        "sid",
        "key",
        "value"
      ]
    },
    "form": [
      "host",
      "cap",
      "project",
      "projver",
      "service",
      "servver",
      "env",
      "sid",
      {
        "key": "key",
        "type": "rc-select",
        "filterOption": true,
        "action": {
          "url": "/config-server/configs/property/ref?name=key&host={0}&cap={1}",
          "params": ["host", "cap"]
        }
      },
      "value"
    ]
  },
  "updateConfigServiceProperty": {
    "formId": "updateConfigSericeProperty",
    "actions": [
      {
        "path": "/config-server/configs/service/property",
        "rest": true,
        "method": "put",
        "title": "Service Property Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Service Property Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readonly": true
        },
        "cap": {
          "type": "string",
          "readonly": true
        },
        "project": {
          "type": "string",
          "readonly": true
        },
        "projver": {
          "type": "string",
          "readonly": true
        },
        "service": {
          "type": "string",
          "readonly": true
        },
        "servver": {
          "type": "string",
          "readonly": true
        },
        "env": {
          "type": "string",
          "readonly": true
        },
        "key": {
          "type": "string",
          "readonly": true
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "service",
        "servver",
        "env",
        "key",
        "value"
      ]
    },
    "form": [
      "host",
      "cap",
      "project",
      "projver",
      "service",
      "servver",
      "env",
      "key",
      "value"
    ]
  },
  "createServiceFile": {
    "formId": "createServiceFile",
    "actions": [
      {
        "path": "/config-server/configs/service/file",
        "rest": true,
        "method": "post",
        "title": "Service File Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Service File Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readonly": true
        },
        "cap": {
          "type": "string",
          "readonly": true
        },
        "project": {
          "type": "string",
          "readonly": true
        },
        "projver": {
          "title": "project version",
          "type": "string",
          "readonly": true
        },
        "service": {
          "type": "string",
          "readonly": true
        },
        "servver": {
          "title": "service version",
          "type": "string",
          "readonly": true
        },
        "env": {
          "type": "string",
          "readonly": true
        },
        "sid": {
          "type": "integer",
          "readonly": true
        },
        "filename": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "service",
        "servver",
        "env",
        "sid",
        "filename"
      ]
    },
    "form": [
      "host",
      "cap",
      "project",
      "projver",
      "service",
      "servver",
      "env",
      "sid",
      "filename"
    ]
  },
  "createServiceCert": {
    "formId": "createServiceCert",
    "actions": [
      {
        "path": "/config-server/configs/service/cert",
        "rest": true,
        "method": "post",
        "title": "Service Cert Detail",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Service Cert Detail",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "readonly": true
        },
        "cap": {
          "type": "string",
          "readonly": true
        },
        "project": {
          "type": "string",
          "readonly": true
        },
        "projver": {
          "title": "project version",
          "type": "string",
          "readonly": true
        },
        "service": {
          "type": "string",
          "readonly": true
        },
        "servver": {
          "title": "service version",
          "type": "string",
          "readonly": true
        },
        "env": {
          "type": "string",
          "readonly": true
        },
        "sid": {
          "type": "integer",
          "readonly": true
        },
        "filename": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "cap",
        "project",
        "projver",
        "service",
        "servver",
        "env",
        "sid",
        "filename"
      ]
    },
    "form": [
      "host",
      "cap",
      "project",
      "projver",
      "service",
      "servver",
      "env",
      "sid",
      "filename"
    ]
  },
  "updateBlog": {
    "formId": "updateBlog",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "blog",
        "action": "updateBlog",
        "version": "0.1.0",
        "title": "Update Blog",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Blog Form",
      "type": "object",
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "readonly": true
        },
        "id": {
          "title": "Blog Id",
          "type": "string",
          "readonly": true
        },
        "status": {
          "type": "string",
          "title": "Status",
          "enum": ["draft", "published"]
        },
        "title": {
          "type": "string",
          "title": "Title"
        },
        "body": {
          "type": "string",
          "title": "Body"
        },
        "summary": {
          "type": "string",
          "title": "Summary"
        },
        "author": {
          "type": "string",
          "title": "Author Id",
          "readonly": true
        },
        "publishDate": {
          "type": "number",
          "title": "Publish Date",
          "readonly": true
        },
        "categories": {
          "type": "array",
          "title": "Categories",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "featuredImageUrl": {
          "type": "string",
          "title": "Featured Image URL"
        },
        "commentStatus": {
          "type": "string",
          "title": "Comment Open or Closed",
          "default": "O",
          "enum": ["O", "C"]
        },
        "commentCount": {
          "type": "integer",
          "title": "Number of comments",
          "readonly": true
        }
      },
      "required": [
        "host",
        "id",
        "status",
        "title",
        "body",
        "summary",
        "author",
        "publishDate",
        "categories",
        "tags",
        "commentStatus"
      ]
    },
    "form": [
      "host",
      "id",
      "status",
      "title",
      {
        "key": "body",
        "type": "markdown"
      },
      {
        "key": "summary",
        "type": "textarea",
        "placeholder": "Plain text summary",
        "rows": 5
      },
      "author",
      "publishDate",
      {
        "key": "categories",
        "type": "taxonomy",
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22category%22%2C%22action%22%3A%22getCategoryByName%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22name%22%3A%22blog%22%7D%7D"
        }
      },
      {
        "key": "tags",
        "type": "rc-select",
        "multiple": true,
        "tags": true,
        "maxTagTextLength": 20,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22tag%22%2C%22action%22%3A%22getTags%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22host%22%3A%22lightapi.net%22%2C%22app%22%3A%22blog%22%7D%7D"
        }
      },
      "featuredImageUrl",
      {
        "key": "commentStatus",
        "titleMap": [
          { "value": "O", "name": "Open" },
          { "value": "C", "name": "Closed" }
        ]
      }
    ]
  },
  "createProvider": {
    "formId": "createProvider",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "oauth",
        "action": "createProvider",
        "version": "0.1.0",
        "title": "Create Provider Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Provider Form",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "providerId": {
          "title": "Provider Id",
          "type": "string"
        },
        "providerName": {
          "type": "string",
          "title": "Provider Name"
        },
        "providerDesc": {
          "type": "string",
          "title": "Provider Description"
        },
        "operationOwner": {
          "type": "string",
          "title": "Operation Owner"
        },
        "deliveryOwner": {
          "type": "string",
          "title": "Delivery Owner"
        }
      },
      "required": ["hostId", "providerId", "providerName"]
    },
    "form": [
      "hostId",
      "providerId",
      "providerName",
      {
        "key": "providerDesc",
        "type": "textarea",
        "placeholder": "Plain text description",
        "rows": 5
      },
      {
        "key": "operationOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "deliveryOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      }
    ]
  },
  "updateProvider": {
    "formId": "updateProvider",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "oauth",
        "action": "updateProvider",
        "version": "0.1.0",
        "title": "Update Provider Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Provider Form",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "providerId": {
          "title": "Provider Id",
          "type": "string",
          "readonly": true
        },
        "providerName": {
          "type": "string",
          "title": "Provider Name"
        },
        "providerDesc": {
          "type": "string",
          "title": "Provider Description"
        },
        "operationOwner": {
          "type": "string",
          "title": "Operation Owner"
        },
        "deliveryOwner": {
          "type": "string",
          "title": "Delivery Owner"
        }
      },
      "required": ["hostId", "providerId", "providerName"]
    },
    "form": [
      "hostId",
      "providerId",
      "providerName",
      {
        "key": "providerDesc",
        "type": "textarea",
        "placeholder": "Plain text description",
        "rows": 5
      },
      {
        "key": "operationOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      },
      {
        "key": "deliveryOwner",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/portal/query?cmd=%7B%22host%22%3A%22lightapi.net%22%2C%22service%22%3A%22user%22%2C%22action%22%3A%22getUserLabel%22%2C%22version%22%3A%220.1.0%22%2C%22data%22%3A%7B%22hostId%22%3A%22N2CMw0HGQXeLvC1wBfln2A%22%7D%7D",
          "params": ["hostId"]
        }
      }
    ]
  },
  "createProductVersion": {
    "formId": "createProductVersion",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "product",
        "action": "createProductVersion",
        "version": "0.1.0",
        "title": "Create Product Version Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Product Version Form",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "productId": {
          "title": "Product Id",
          "type": "string"
        },
        "productVersion": {
          "type": "string",
          "title": "Product Version"
        },
        "light4jVersion": {
          "type": "string",
          "title": "Light-4j Version"
        },
        "versionDesc": {
          "type": "string",
          "title": "Version Desc"
        },
        "current": {
          "type": "boolean",
          "title": "Current"
        },
        "versionStatus": {
          "type": "string",
          "title": "Version Status"
        }
      },
      "required": [
        "hostId",
        "productId",
        "productVersion",
        "light4jVersion",
        "current",
        "versionStatus"
      ]
    },
    "form": [
      "hostId",
      "productId",
      "productVersion",
      "light4jVersion",
      "versionDesc",
      "current",
      {
        "key": "versionStatus",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=product_version_status&host={0}",
          "params": ["hostId"]
        }
      }
    ]
  },
  "updateProductVersion": {
    "formId": "updateProductVersion",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "product",
        "action": "updateProductVersion",
        "version": "0.1.0",
        "title": "Update Product Version Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Product Version Form",
      "type": "object",
      "properties": {
        "hostId": {
          "title": "Host Id",
          "type": "string",
          "readonly": true
        },
        "productId": {
          "title": "Product Id",
          "type": "string",
          "readonly": true
        },
        "productVersion": {
          "type": "string",
          "title": "Product Version",
          "readonly": true
        },
        "light4jVersion": {
          "type": "string",
          "title": "Light-4j Version"
        },
        "versionDesc": {
          "type": "string",
          "title": "Version Desc"
        },
        "current": {
          "type": "boolean",
          "title": "Current"
        },
        "versionStatus": {
          "type": "string",
          "title": "Version Status"
        }
      },
      "required": [
        "hostId",
        "productId",
        "productVersion",
        "light4jVersion",
        "current",
        "versionStatus"
      ]
    },
    "form": [
      "hostId",
      "productId",
      "productVersion",
      "light4jVersion",
      "versionDesc",
      "current",
      {
        "key": "versionStatus",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=product_version_status&host={0}",
          "params": ["hostId"]
        }
      }
    ]
  },
  "createInstance": {
    "formId": "createInstance",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "instance",
        "action": "createInstance",
        "version": "0.1.0",
        "title": "Create Instance Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Instance Form",
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "description": "Host Id"
        },
        "productId": {
          "type": "string",
          "description": "Product Id"
        },
        "productVersion": {
          "title": "Product Version",
          "type": "string"
        },
        "serviceId": {
          "title": "Service Id",
          "type": "string"
        },
        "serviceDesc": {
          "title": "Service Desc",
          "type": "string"
        },
        "instanceDesc": {
          "title": "Instance Desc",
          "type": "string"
        },
        "platformId": {
          "title": "Version Status",
          "type": "string"
        },
        "tagId": {
          "title": "Tag Id",
          "type": "string"
        }
      },
      "required": [
        "hostId",
        "productId",
        "productVersion",
        "serviceId",
        "serviceDesc",
        "instanceDesc",
        "platformId"
      ]
    },
    "form": [
      "hostId",
      "productId",
      "productVersion",
      "serviceId",
      "serviceDesc",
      "instanceDesc",
      "platformId",
      "tagId"
    ]
  },
  "updateInstance": {
    "formId": "updateInstance",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "instance",
        "action": "updateInstance",
        "version": "0.1.0",
        "title": "Update Instance Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Instance Form",
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "description": "Host Id",
          "readonly": true
        },
        "instanceId": {
          "type": "string",
          "description": "Instance Id",
          "readonly": true
        },
        "productId": {
          "type": "string",
          "description": "Product Id"
        },
        "productVersion": {
          "title": "Product Version",
          "type": "string"
        },
        "serviceId": {
          "title": "Service Id",
          "type": "string"
        },
        "serviceDesc": {
          "title": "Service Desc",
          "type": "string"
        },
        "instanceDesc": {
          "title": "Instance Desc",
          "type": "string"
        },
        "platformId": {
          "title": "Version Status",
          "type": "string"
        },
        "tagId": {
          "title": "Tag Id",
          "type": "string"
        }
      },
      "required": [
        "hostId",
        "instanceId",
        "productId",
        "productVersion",
        "serviceId",
        "serviceDesc",
        "instanceDesc",
        "platformId"
      ]
    },
    "form": [
      "hostId",
      "instanceId",
      "productId",
      "productVersion",
      "serviceId",
      "serviceDesc",
      "instanceDesc",
      "platformId",
      "tagId"
    ]
  },
  "createPlatform": {
    "formId": "createPlatform",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "deployment",
        "action": "createPlatform",
        "version": "0.1.0",
        "title": "Create Platform Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Platform Form",
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "description": "Host Id"
        },
        "platformName": {
          "type": "string",
          "description": "Platform Name"
        },
        "platformVersion": {
          "title": "Platform Version",
          "type": "string"
        },
        "clientType": {
          "title": "Client Type",
          "type": "string"
        },
        "clientUrl": {
          "title": "Client Url",
          "type": "string"
        },
        "credentials": {
          "title": "Credentials",
          "type": "string"
        },
        "proxyUrl": {
          "title": "Proxy Url",
          "type": "string"
        },
        "proxyPort": {
          "title": "Proxy Port",
          "type": "integer"
        },
        "environment": {
          "title": "Environment",
          "type": "string"
        },
        "systemEnv": {
          "title": "System Env",
          "type": "string"
        },
        "runtimeEnv": {
          "title": "Runtime Env",
          "type": "string"
        },
        "zone": {
          "title": "Zone",
          "type": "string"
        },
        "region": {
          "title": "Region",
          "type": "string"
        },
        "lob": {
          "title": "Lob",
          "type": "string"
        }
      },
      "required": [
        "hostId",
        "platformName",
        "platformVersion",
        "clientType",
        "clientUrl",
        "credentials"
      ]
    },
    "form": [
      "hostId",
      "platformName",
      "platformVersion",
      "clientType",
      "clientUrl",
      "credentials",
      "proxyUrl",
      "proxyPort",
      {
        "key": "environment",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=environment&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "systemEnv",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=system_env&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "runtimeEnv",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=runtime_env&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "region",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=region&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "lob",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=lob&host={0}",
          "params": ["hostId"]
        }
      }
    ]
  },
  "updatePlatform": {
    "formId": "updatePlatform",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "deployment",
        "action": "updatePlatform",
        "version": "0.1.0",
        "title": "Update Platform Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Platform Form",
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "description": "Host Id",
          "readonly": true
        },
        "platformId": {
          "type": "string",
          "description": "Platform Id",
          "readonly": true
        },
        "platformName": {
          "type": "string",
          "description": "Platform Name"
        },
        "platformVersion": {
          "title": "Platform Version",
          "type": "string"
        },
        "clientType": {
          "title": "Client Type",
          "type": "string"
        },
        "clientUrl": {
          "title": "Client Url",
          "type": "string"
        },
        "credentials": {
          "title": "Credentials",
          "type": "string"
        },
        "proxyUrl": {
          "title": "Proxy Url",
          "type": "string"
        },
        "proxyPort": {
          "title": "Proxy Port",
          "type": "integer"
        },
        "environment": {
          "title": "Environment",
          "type": "string"
        },
        "systemEnv": {
          "title": "System Env",
          "type": "string"
        },
        "runtimeEnv": {
          "title": "Runtime Env",
          "type": "string"
        },
        "zone": {
          "title": "Zone",
          "type": "string"
        },
        "region": {
          "title": "Region",
          "type": "string"
        },
        "lob": {
          "title": "Lob",
          "type": "string"
        }
      },
      "required": [
        "hostId",
        "platformId",
        "platformName",
        "platformVersion",
        "clientType",
        "clientUrl",
        "credentials"
      ]
    },
    "form": [
      "hostId",
      "platformId",
      "platformName",
      "platformVersion",
      "clientType",
      "clientUrl",
      "credentials",
      "proxyUrl",
      "proxyPort",
      {
        "key": "environment",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=environment&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "systemEnv",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=system_env&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "runtimeEnv",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=runtime_env&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "region",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=region&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "lob",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=lob&host={0}",
          "params": ["hostId"]
        }
      }
    ]
  },
  "createDeployment": {
    "formId": "createDeployment",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "deployment",
        "action": "createDeployment",
        "version": "0.1.0",
        "title": "Create Deployment Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Create Deployment Form",
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "description": "Host Id"
        },
        "instanceId": {
          "type": "string",
          "description": "Instance Id"
        },
        "deploymentStatus": {
          "title": "Deployment Status",
          "type": "string"
        },
        "deploymentType": {
          "title": "Deployment Type",
          "type": "string"
        },
        "pipelineId": {
          "title": "Pipeline Id",
          "type": "string"
        },
        "scheduleTs": {
          "title": "Schedule Timestamp",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "hostId",
        "instanceId",
        "deploymentStatus",
        "deploymentType",
        "pipelineId",
        "scheduleTs"
      ]
    },
    "form": [
      "hostId",
      "instanceId",
      {
        "key": "deploymentStatus",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=deployment_status&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "deploymentType",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=deployment_type&host={0}",
          "params": ["hostId"]
        }
      },
      "pipelineId",
      "scheduleTs"
    ]
  },
  "updateDeployment": {
    "formId": "updateDeployment",
    "actions": [
      {
        "host": "lightapi.net",
        "service": "deployment",
        "action": "updateDeployment",
        "version": "0.1.0",
        "title": "Update Deployment Form",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "title": "Update Deployment Form",
      "type": "object",
      "properties": {
        "hostId": {
          "type": "string",
          "description": "Host Id",
          "readonly": true
        },
        "deploymentId": {
          "type": "string",
          "description": "Deployment Id",
          "readonly": true
        },
        "instanceId": {
          "type": "string",
          "description": "Instance Id"
        },
        "deploymentStatus": {
          "title": "Deployment Status",
          "type": "string"
        },
        "deploymentType": {
          "title": "Deployment Type",
          "type": "string"
        },
        "pipelineId": {
          "title": "Pipeline Id",
          "type": "string"
        },
        "scheduleTs": {
          "title": "Schedule Timestamp",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "hostId",
        "deploymentId",
        "instanceId",
        "deploymentStatus",
        "deploymentType",
        "pipelineId",
        "scheduleTs"
      ]
    },
    "form": [
      "hostId",
      "deploymentId",
      "instanceId",
      {
        "key": "deploymentStatus",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=deployment_status&host={0}",
          "params": ["hostId"]
        }
      },
      {
        "key": "deploymentType",
        "type": "dynaselect",
        "multiple": false,
        "action": {
          "url": "/r/data?name=deployment_type&host={0}",
          "params": ["hostId"]
        }
      },
      "pipelineId",
      "scheduleTs"
    ]
  },
  "logRetrieval": {
    "formId": "logRetrieval",
    "actions": [
      {
        "path": "/services/logger/content",
        "rest": true,
        "title": "Log Retrieval",
        "success": "/app/controller/logContent",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Log Retrieval",
      "properties": {
        "protocol": {
          "title": "Protocol",
          "type": "string",
          "readonly": true
        },
        "address": {
          "title": "Address",
          "type": "string",
          "readonly": true
        },
        "port": {
          "title": "Port",
          "type": "integer",
          "readonly": true
        },
        "loggerName": {
          "title": "Logger Name",
          "type": "string"
        },
        "loggerLevel": {
          "title": "Logger Level",
          "type": "string",
          "enum": ["ERROR", "WARN", "INFO", "DEBUG", "TRACE"]
        },
        "startTime": {
          "type": "string",
          "title": "Start Time"
        },
        "endTime": {
          "type": "string",
          "title": "End Time"
        }
      },
      "required": ["protocol", "address", "port", "loggerLevel"]
    },
    "form": [
      "protocol",
      "address",
      "port",
      "loggerName",
      "loggerLevel",
      {
        "key": "startTime",
        "type": "timestamp"
      },
      {
        "key": "endTime",
        "type": "timestamp"
      }
    ]
  },
  "loggerConfig": {
    "formId": "loggerConfig",
    "actions": [
      {
        "path": "/services/logger",
        "rest": true,
        "title": "Logger Config",
        "success": "/app/success",
        "failure": "/app/failure"
      }
    ],
    "schema": {
      "type": "object",
      "title": "Logger Config",
      "required": ["protocol", "address", "port", "loggers"],
      "properties": {
        "protocol": {
          "type": "string",
          "title": "Protocol",
          "readonly": true
        },
        "address": {
          "type": "string",
          "title": "Address",
          "readonly": true
        },
        "port": {
          "type": "integer",
          "title": "Port",
          "readonly": true
        },
        "loggers": {
          "type": "array",
          "title": "Loggers",
          "maxItems": 20,
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "level": {
                "title": "Level",
                "type": "string",
                "enum": ["ERROR", "WARN", "INFO", "DEBUG", "TRACE"]
              }
            },
            "required": ["name", "level"]
          }
        }
      }
    },
    "form": [
      "protocol",
      "address",
      "port",
      {
        "key": "loggers",
        "add": "New",
        "style": {
          "add": "btn-success"
        },
        "items": ["loggers[].name", "loggers[].level"]
      }
    ]
  }
}
